index,Consept,required,img_src,code,output,Explanation,hint,generalConcepts,difficulty,mapped_required_time,emptying,concept_emptying2
0,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إدخال خمسة أعداد ثم يعرض له متوسط هذه الأعداد.
ملاحظة: كل عدد يتم إدخاله يجب أن يتم تخزينه في متغير. أي ممنوع إستخدام مصفوفة.",,"
#include <iostream>

int main() {
	double n1, n2, n3, n4, n5, avg;

	std::cout << ""Enter n1: "";
	std::cin >> n1;

	std::cout << ""Enter n2: "";
	std::cin >> n2;

	std::cout << ""Enter n3: "";
	std::cin >> n3;

	std::cout << ""Enter n4: "";
	std::cin >> n4;

	std::cout << ""Enter n5: "";
	std::cin >> n5;

	avg = (n1 + n2 + n3 + n4 + n5) / 5;

	std::cout << ""Average = "" << avg;

	char end; std::cin >> end;
	return 0;

}
		","

				Enter n1: 7 
				Enter n2: 4 
				Enter n3: 9 
				Enter n4: 1 
				Enter n5: 3 
				Average = 4.8
			
",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,"مثال: إذا قام المستخدم بإدخال الأعداد 7 , 4 , 9 , 1 , 3 فستكون النتيجة كالتالي.

Enter n1: 7
Enter n2: 4
Enter n3: 9
Enter n4: 1
Enter n5: 3
Average = 4.8
	","['أنواع البيانات', 'الأساسيات']",0.0,11.25,5.0,"[2.1140939597315436, 2.1140939597315436]"
1,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إدخال رقمين, ثم يعرض له ناتج جمعمها, طرحهما, ضربهما و قسمتهما.
مثال: إذا قام المستخدم بإدخال الرقمين 14 و 5 فستكون النتيجة كالتالي.

Enter first number: 14
Enter second number: 5
14 + 5 = 19
14 - 5 = 9
14 * 5 = 70
14 / 5 = 2
	",,"
#include <iostream>

int main() {

	int x, y;

	std::cout << ""Enter first number: "";
	std::cin >> x;

	std::cout << ""Enter second number: "";
	std::cin >> y;

	std::cout << x << "" + "" << y << "" = "" << x + y << ""\n"";
	std::cout << x << "" - "" << y << "" = "" << x - y << ""\n"";
	std::cout << x << "" * "" << y << "" = "" << x * y << ""\n"";
	std::cout << x << "" / "" << y << "" = "" << x / y << ""\n"";

	char end; std::cin >> end;
	return 0;

}
		","
Enter first number: 14
Enter second number: 5
14 + 5 = 19
14 - 5 = 9
14 * 5 = 70
14 / 5 = 2
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقمين 14 و 5 عند التشغيل.,,"['أنواع البيانات', 'الأساسيات']",2.4723152201905827,7.486157610095291,5.0,"[2.56152125279642, 2.56152125279642]"
2,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إدخال ثلاث أرقام و خزنها في ثلاث متغيرات (a - b - c ), ثم يعرض له أكبر رقم تم إداخله.
مثال: إذا قام المستخدم بإدخال الأرقام 2, 7 و 5 فستكون النتيجة كالتالي.

Enter a: 1
Enter b: 2
Enter c: 5
The max number is: 5
	",,"
#include <iostream>

int main() {

	int a, b, c, maximum;

	std::cout << ""Enter a: "";
	std::cin >> a;

	std::cout << ""Enter b: "";
	std::cin >> b;

	std::cout << ""Enter c: "";
	std::cin >> c;

	maximum = (a > b) ? a : b;
	maximum = (maximum > c) ? maximum : c;

	std::cout << ""The max number is: "" << maximum;

	char end; std::cin >> end;
	return 0;

}
		","
#include <iostream>

int main() {

	int a, b, c, maximum;

	std::cout << ""Enter a: "";
	std::cin >> a;

	std::cout << ""Enter b: "";
	std::cin >> b;

	std::cout << ""Enter c: "";
	std::cin >> c;

	if (a > b && a > c)
	{
		maximum = a;
	}
	else
	{
		maximum = b;
	}

	if (maximum < c)
	{
		maximum = c;
	}

	std::cout << ""The max number is: "" << maximum;

	char end; std::cin >> end;
	return 0;

}
		",الطريقة الثالثة لحل التمرين و الحصول على نفس النتيجة.,,"['أنواع البيانات', 'الأساسيات']",3.626062322946181,9.313031161473091,5.9284864076240575,"[3.3184440150693164, 3.3184440150693164]"
3,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إدخال رقمين, ثم يعرض له من هو العدد الأكبر بينهما, و في حال كانا متساويان سيعرض له أنهما كذلك.
مثال: إذا قام المستخدم بإدخال الرقمين 3 و 8 فستكون النتيجة كالتالي.

Enter first number: 3
Enter second number: 8
The biggest number is '8'
	",,"
#include <iostream>

int main() {

	int a, b, c, minimum;

	std::cout << ""Enter a: "";
	std::cin >> a;

	std::cout << ""Enter b: "";
	std::cin >> b;

	std::cout << ""Enter c: "";
	std::cin >> c;

	minimum = (a < b) ? a : b;
	minimum = (minimum < c) ? minimum : c;

	std::cout << ""The min number is: "" << minimum;

	char end; std::cin >> end;
	return 0;

}
		","
#include <iostream>

int main() {

	int a, b, c, minimum;

	std::cout << ""Enter a: "";
	std::cin >> a;

	std::cout << ""Enter b: "";
	std::cin >> b;

	std::cout << ""Enter c: "";
	std::cin >> c;

	if (a < b && a < c)
	{
		minimum = a;
	}
	else
	{
		minimum = b;
	}

	if (minimum > c)
	{
		minimum = c;
	}

	std::cout << ""The min number is: "" << minimum;

	char end; std::cin >> end;
	return 0;

}
		",الطريقة الثالثة لحل التمرين و الحصول على نفس النتيجة.,,"['أنواع البيانات', 'الأساسيات']",3.626062322946181,9.313031161473091,6.526844314759559,"[3.9653239438460273, 3.9653239438460273]"
4,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إدخال رقم الشهر, و بعدها سيقوم بطباعة إسم الشهر باللغة الإنجليزية.
	رقم الشهر يجب أن يكون بين 1 و 12.
	في حال قام المستخدم بإدخال رقم أصغر من 1 أو أكبر من 12 سيتم عرض الرسالة التالية له ""Error input, Month number should be between 1 and 12."".",,"
#include <iostream>

int main() {
	int month;

	std::cout << ""Month number: "";
	std::cin >> month;

	std::cout << ""Month name: "";

	switch (month)
	{
		case 1:
			std::cout << ""January"";
			break;
		case 2:
			std::cout << ""February"";
			break;
		case 3:
			std::cout << ""March"";
			break;
		case 4:
			std::cout << ""April"";
			break;
		case 5:
			std::cout << ""May"";
			break;
		case 6:
			std::cout << ""June"";
			break;
		case 7:
			std::cout << ""July"";
			break;
		case 8:
			std::cout << ""August"";
			break;
		case 9:
			std::cout << ""September"";
			break;
		case 10:
			std::cout << ""October"";
			break;
		case 11:
			std::cout << ""November"";
			break;
		case 12:
			std::cout << ""December"";
			break;
		default:
			std::cout << ""Error input, Month number should be between 1 and 12."";
			break;
	}

	char end; std::cin >> end;
	return 0;

}
		","
Month number: 5
Month name: May
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 5 عند التشغيل.,"مثال: إذا قام المستخدم بإدخال الرقم 5 فستكون النتيجة كالتالي.

Month number: 5
Month name: May
	","['الشروط', 'أنواع البيانات', 'الأساسيات']",6.798866855524084,53.39943342776204,21.82602326832731,"[7.935407096043097, 9.512477554766821, 9.512477554766821]"
5,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إدخال رقمين, ثم يعرض له قائمة خيارات يمكن تطبيقها على هذين الرقمين.
	المستخدم سيكون عليه إدخال رقم الخيار فقط حتى يتم تنفيذه.
الخيار 0 لإيقاف البرنامج.
الخيار 1 لإطباعة ناتج جمع العددين.
الخيار 2 لإطباعة ناتج طرح العددين.
الخيار 3 لإطباعة ناتج شرب العددين.
الخيار 4 لإطباعة ناتج قسمة العددين.
",,"
#include <iostream>

int main() {
	double a, b;
	int option = -1;

	std::cout << ""Enter first number: "";
	std::cin >> a;

	std::cout << ""Enter second number: "";
	std::cin >> b;

	std::cout << (
		""\nWrite down the operation number then press enter\n""
		""0: To end the program.\n""
		""1: To print the sum.\n""
		""2: To print the subtraction.\n""
		""3: To print the multiplication.\n""
		""4: To print the division."");

	while (option != 0)
	{
		std::cout << ""\n-------------------------\n"";
		std::cout << ""Enter option: "";
		std::cin >> option;

		switch (option)
		{
		case 0:
			std::cout << ""Program end."";
			break;
		case 1:
			std::cout << a << "" + "" << b << "" = "" << (a + b);
			break;
		case 2:
			std::cout << a << "" - "" << b << "" = "" << (a - b);
			break;
		case 3:
			std::cout << a << "" * "" << b << "" = "" << (a * b);
			break;
		case 4:
			std::cout << a << "" / "" << b << "" = "" << (a / b);
			break;
		}
	}

	char end; std::cin >> end;
	return 0;

}
		","

				Enter first number:  1 
Enter second number:  4 

Write down the operation number then press enter
				0: To end the program.
				1: To print the sum.
				2: To print the subtraction.
				3: To print the multiplication.
				4: To print the division.
				-------------------------
				Enter option:  1 
1 + 4 = 5
-------------------------
				Enter option:  2 
1 - 4 = -3
-------------------------
				Enter option:  3 
1 * 4 = 4
-------------------------
				Enter option:  4 
1 / 4 = 0.25
-------------------------
				Enter option:  0 
Program end.

","إذا قام المستخدم بإدخال الرقمين 1 و 4. ثم قام بتجربة كل الخيارات الموجودة في القائمة, فستكون النتيجة كالتالي.
		قمنا بتعليم المعلومات التي أدخلها المستخدم باللون الأصفر و النتائج التي ظهرت له بعد إدخالها باللون الأزرق.",,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",20.99299239600417,46.746496198002085,22.482153663048308,"[7.9806692258822824, 8.814183234217422, 10.178614979405364, 10.178614979405364]"
6,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إدخال رقم أكبر من 0, ثم يعرض له ناتج جمع جميع الأرقام من 1 لهذا الرقم.
مثال: إذا قام المستخدم بإدخال الرقم 5 فستكون النتيجة كالتالي.

Enter a number: 5
S = 1 + 2 + 3 + 4 + 5
S = 15
	",,"
#include <iostream>

int main() {

	int n, s = 0;

	std::cout << ""Enter a number: "";
	std::cin >> n;

	std::cout << ""S = "";

	for (int i = 1; i <= n; i++)
	{
		std::cout << i << ((i < n) ? "" + "" : """");
		s += i;
	}

	std::cout << ""\nS = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 5
S = 1 + 2 + 3 + 4 + 5
S = 15
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 5 عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",29.00849858356941,19.504249291784703,24.69645800160483,"[9.205388676933971, 11.364143718655749, 11.364143718655749]"
7,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إدخال رقم أكبر من 0, ثم يعرض له ناتج ضرب جميع الأرقام من 1 لهذا الرقم.
مثال: إذا قام المستخدم بإدخال الرقم 5 فستكون النتيجة كالتالي.

Enter a number: 5
M = 1 * 2 * 3 * 4 * 5
M = 120
	",,"
#include <iostream>

int main() {

	int n, m = 1;

	std::cout << ""Enter a number: "";
	std::cin >> n;

	std::cout << ""M = "";

	for (int i = 1; i <= n; i++)
	{
		std::cout << i << ((i < n) ? "" * "" : """");
		m *= i;
	}

	std::cout << ""\nM = "" << m;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 5
M = 1 * 2 * 3 * 4 * 5
M = 120
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 5 عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",29.00849858356941,19.504249291784703,27.138175577410493,"[10.505912540402036, 12.625476870322512, 12.625476870322512]"
8,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إدخال رقمين, ثم يعرض له من هو العدد الأكبر بينهما, و في حال كانا متساويان سيعرض له أنهما كذلك.
مثال: إذا قام المستخدم بإدخال الرقمين 3 و 8 فستكون النتيجة كالتالي.

Enter first number: 3
Enter second number: 8
The biggest number is '8'
	",,"
#include <iostream>

int main() {

	int x, y;

	std::cout << ""Enter first number: "";
	std::cin >> x;

	std::cout << ""Enter second number: "";
	std::cin >> y;

	if (x == y)
	{
		std::cout << ""They are equal"";
	}
	else
	{
		std::cout << ""The biggest number is '"" << ((x > y) ? x : y) << ""'"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter first number: 3
Enter second number: 8
The biggest number is '8'
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقمين 3 و 8 عند التشغيل.,,"['الشروط', 'أنواع البيانات', 'الأساسيات']",37.08472830285861,24.792364151429304,28.96946375926474,"[11.636685939556893, 13.683333557338806, 13.683333557338806]"
9,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إدخال رقمين, ثم يعرض له من هو العدد الأصغر بينهما, و في حال كانا متساويان سيعرض له أنهما كذلك.
مثال: إذا قام المستخدم بإدخال الرقمين 3 و 8 فستكون النتيجة كالتالي.

Enter first number: 3
Enter second number: 8
The lowest number is '3'
	",,"
#include <iostream>

int main() {

	int x, y;

	std::cout << ""Enter first number: "";
	std::cin >> x;

	std::cout << ""Enter second number: "";
	std::cin >> y;

	if (x == y)
	{
		std::cout << ""They are equal"";
	}
	else
	{
		std::cout << ""The lowest number is '"" << ((x < y) ? x : y) << ""'"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter first number: 3
Enter second number: 8
The lowest number is '3'
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقمين 3 و 8 عند التشغيل.,,"['الشروط', 'أنواع البيانات', 'الأساسيات']",37.08472830285861,24.792364151429304,31.067811366982173,"[12.99620114873003, 14.83021005297616, 14.83021005297616]"
10,التعامل مع الأرقام و النصوص,"أكتب برنامج يطلب من المستخدم إدخال رقم. بعدها يعرض له ناتج جمع أعداد هذا الرقم.
مثال: إذا قام المستخدم بإدخال الرقم 123 فسيتم حساب مجموع أعداده هكذا 1 + 2 + 3 و النتيجة ستكون 6.",,"
#include <iostream>

int main() {

	int n;
	int s = 0;

	std::cout << ""Enter a number: "";
	std::cin >> n;

	while (n != 0)
	{
		s += n % 10;
		n /= 10;
	}

	std::cout << ""The sum of the digits is: "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 1234
The sum of the digits is: 10
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 1234 عند التشغيل.,"إذا كنت تتعامل مع عدد صحيح إسمه n و قلت n % 10 فأنت بذلك ستحصل على أخر عدد موجود في الرقم.
	و إذا قلت n / 10 فأنت بذلك ستتخلص من أخر عدد كان موجوداً في الرقم.","['الحلقات', 'أنواع البيانات', 'الأساسيات']",38.52691218130312,24.26345609065156,32.746489453156116,"[12.861968503850091, 15.837196708099018, 15.837196708099018]"
11,إجراء عمليات حسابية,"قم بتعريف دالة إسمها IsPrime(), عند استدعاءها نمرر لها عدد, فترجع True إذا كان العدد عبارة عن عدد أوّلي ( Prime Number ) و ترجع False إن لم يكن كذلك.
	بعدها قم بتجربة هذه الدالة في البرنامج.",,"
#include <iostream>

bool isPrime(int n) {

	// إذا كان الرقم من الأساس أصغر أو يساوي 1 فعندها لا يعتبر عدد أولي
	if (n <= 1)
	{
		return false;
	}

	// إذا كان الرقم الذي تم تمريره إليها أكبر من 1 عندها سيتم التأكد منه
	else
	{
		// سنحاول قسمته على جميع الأعداد الموجودة إبتداءاً من الرقم 2 إلى نصف قيمه العدد الذي تم تمريره للدالة
		for (int i = 2; i <= (n / 2); i++)
		{
			// إذا كان العدد الذي تم تمريره لها لا يمكن قسمته على أي رقم بين 2 و نصفه فعندها لا يعتبر عدد أولي
			if (n % i == 0)
			{
				return false;
			}
		}
		// إذا كان العدد الذي تم تمريره لها يمكن قسمته على أي رقم بين 2 و نصفه فعندها يعتبر عدد أولي
		return true;
	}

}


int main() {
	
	std::cout << ""2 is a prime number? "" << (isPrime(2) ? ""true"" : ""false"") << ""\n"";
	std::cout << ""3 is a prime number? "" << (isPrime(3) ? ""true"" : ""false"") << ""\n"";
	std::cout << ""4 is a prime number? "" << (isPrime(4) ? ""true"" : ""false"") << ""\n"";
	std::cout << ""5 is a prime number? "" << (isPrime(5) ? ""true"" : ""false"") << ""\n"";
	std::cout << ""6 is a prime number? "" << (isPrime(6) ? ""true"" : ""false"") << ""\n"";

	char end; std::cin >> end;
	return 0;

}
		","
2 is a prime number? true
3 is a prime number? true
4 is a prime number? false
5 is a prime number? true
6 is a prime number? false
		",سنحصل على النتيجة التالية عند التشغيل.,معلومة: العدد الأولي هو العدد الذي يقبل القسمة على نفسه و على 1 فقط مثل الأرقام 1 - 3 - 5 - 7 - 11 - 13 - 17 إلخ..,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'الدوال']",41.03175786491723,31.765878932458616,34.21842917295553,"[13.839233081982742, 14.706473090655143, 16.775270574430365, 16.775270574430365, 13.426345077853863]"
12,التعامل مع الأرقام و النصوص,"أكتب برنامج يطلب من المستخدم إدخال رقم. بعدها يعرض له نسخة من هذا الرقم و لكن بشكل معكوس.
مثال: إذا قام المستخدم بإدخال الرقم 12345, النتيجة ستكون 54321.",,"
#include <iostream>

int main() {

	int number;
	int originalNumber;
	int reversedNumber = 0;
	int remainder;

	std::cout << ""Enter a number: "";
	std::cin >> number;

	originalNumber = number;

	while (number != 0)
	{
		remainder = number % 10;
		reversedNumber = reversedNumber * 10 + remainder;
		number /= 10;
	}

	std::cout << ""Reversed version of "" << originalNumber << "" is: "" << reversedNumber;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 12345
Reversed version of 12345 is: 54321
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 12345 عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",41.699716713881024,30.849858356940512,35.6018294951284,"[14.786984527573212, 17.68383130821953, 17.68383130821953]"
13,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إدخال رقمين, ثم يعرض له نتيجة مقارنة هذين الرقمين.
مثال: إذا قام المستخدم بإدخال الرقمين 2 و 7 فستكون النتيجة كالتالي.

Enter first number: 7
Enter second number: 2
Result: 7 > 2
	",,"
#include <iostream>

int main() {

	int x, y;

	std::cout << ""Enter first number: "";
	std::cin >> x;

	std::cout << ""Enter second number: "";
	std::cin >> y;

	std::cout << ""Result: "";

	if (x > y)
	{
		std::cout << x << "" > "" << y;
	}
	else if (x < y)
	{
		std::cout << x << "" < "" << y;
	}
	else
	{
		std::cout << x << "" = "" << y;
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter first number: 7
Enter second number: 2
Result: 7 > 2
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقمين 7 و 2 عند التشغيل.,,"['الشروط', 'أنواع البيانات', 'الأساسيات', 'الدوال']",45.93012275731824,32.965061378659115,36.81099195579941,"[16.230726691537097, 18.534312754841412, 18.534312754841412, 16.310734692337178]"
14,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إدخال ثلاث أرقام و خزنها في ثلاث متغيرات (a - b - c ), ثم يعرض له أكبر رقم تم إداخله.
مثال: إذا قام المستخدم بإدخال الأرقام 2, 7 و 5 فستكون النتيجة كالتالي.

Enter a: 1
Enter b: 2
Enter c: 5
The max number is: 5
	",,"
#include <iostream>

int main() {

	int a, b, c, maximum;

	std::cout << ""Enter a: "";
	std::cin >> a;

	std::cout << ""Enter b: "";
	std::cin >> b;

	std::cout << ""Enter c: "";
	std::cin >> c;

	if (a > b && a > c)
	{
		maximum = a;
	}
	else if (b > a && b > c)
	{
		maximum = b;
	}
	else
	{
		maximum = c;
	}

	std::cout << ""The max number is: "" << maximum;

	char end; std::cin >> end;
	return 0;

}
		","
#include <iostream>

int main() {

	int a, b, c, maximum;

	std::cout << ""Enter a: "";
	std::cin >> a;

	std::cout << ""Enter b: "";
	std::cin >> b;

	std::cout << ""Enter c: "";
	std::cin >> c;

	if (a > b && a > c)
	{
		maximum = a;
	}
	else
	{
		maximum = b;
	}

	if (maximum < c)
	{
		maximum = c;
	}

	std::cout << ""The max number is: "" << maximum;

	char end; std::cin >> end;
	return 0;

}
		",الطريقة الثالثة لحل التمرين و الحصول على نفس النتيجة.,الطريقة الثانية لحل التمرين و الحصول على نفس النتيجة.,"['الشروط', 'أنواع البيانات', 'الأساسيات', 'الدوال']",49.8583569405099,37.42917847025495,38.074380266174714,"[17.311922134929524, 19.40286948469806, 19.40286948469806, 18.752066149330965]"
15,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إدخال رقمين, ثم يعرض له من هو العدد الأكبر بينهما, و في حال كانا متساويان سيعرض له أنهما كذلك.
مثال: إذا قام المستخدم بإدخال الرقمين 3 و 8 فستكون النتيجة كالتالي.

Enter first number: 3
Enter second number: 8
The biggest number is '8'
	",,"
#include <iostream>

int main() {

	int a, b, c, minimum;

	std::cout << ""Enter a: "";
	std::cin >> a;

	std::cout << ""Enter b: "";
	std::cin >> b;

	std::cout << ""Enter c: "";
	std::cin >> c;

	if (a < b && a < c)
	{
		minimum = a;
	}
	else if (b < a && b < c)
	{
		minimum = b;
	}
	else
	{
		minimum = c;
	}

	std::cout << ""The min number is: "" << minimum;

	char end; std::cin >> end;
	return 0;

}
		","
#include <iostream>

int main() {

	int a, b, c, minimum;

	std::cout << ""Enter a: "";
	std::cin >> a;

	std::cout << ""Enter b: "";
	std::cin >> b;

	std::cout << ""Enter c: "";
	std::cin >> c;

	if (a < b && a < c)
	{
		minimum = a;
	}
	else
	{
		minimum = b;
	}

	if (minimum > c)
	{
		minimum = c;
	}

	std::cout << ""The min number is: "" << minimum;

	char end; std::cin >> end;
	return 0;

}
		",الطريقة الثالثة لحل التمرين و الحصول على نفس النتيجة.,الطريقة الثانية لحل التمرين و الحصول على نفس النتيجة.,"['الشروط', 'أنواع البيانات', 'الأساسيات', 'الدوال']",49.8583569405099,37.42917847025495,39.36601836670775,"[18.402534175041197, 20.28084281127395, 20.28084281127395, 21.202814203043996]"
16,التعامل مع الأرقام و النصوص,"قم بإنشاء برنامج يطلب من المستخدم إدخال ثلاث نصوص و يخزنهم في ثلاث متغيرات نصية هي S1, S2 و S3 و بعدها ينفذ التالي:
يخبره ما إن كان دمج S1 مع S2 يساوي S3 أم لا.
يخبره ما إن كان S1 يمثل جزء من S2 أو يساويه ( أي S1 == s2 ).
إذا كان طول S1 أكبر من طول S2 قم بإضافة نص S2 على S1 و خزن الناتج في متغير نصي جديد إسمه S4.
إذا كان طول S2 أكبر من طول S1 قم بإضافة نص S1 على S2 و خزن الناتج في متغير نصي جديد إسمه S4.
يخبره ما إن كان S2 يمثل جزء من ثاني نصف في S1.
يعرض له الأحرف الموجودة في أول نصف في S1.
",,"
#include <iostream>
#include <string>

int main() {

	std::string S1, S2, S3, S4;

	std::cout << ""Enter S1: "";
	getline(std::cin, S1);

	std::cout << ""Enter S2: "";
	getline(std::cin, S2);

	std::cout << ""Enter S3: "";
	getline(std::cin, S3);

	std::cout << ""---------------------------------------\n"";

	// Part 1
	std::cout << ""The concatenation of S1 and S2 is equal S3? ""
		<< ((S3 == (S1 + S2)) ? ""True"" : ""False"")
		<< ""\n"";
	
	// Part 2
	std::cout << ""S1 is part of S2 or S1=S2? ""
		<< ((S2.find(S1, 0) != std::string::npos) ? ""True"" : ""False"")
		<< ""\n"";
	
	// Part 3
	if (S1.length() > S2.length()) {
		S4 = S2 + S1;
	}
	
	// Part 4
	if (S2.length() > S1.length()) {
		S4 = S1 + S2;
	}
	
	// Part 5
	std::cout << ""S2 is part of the second half of S1? "" 
		<< ((S1.find(S2, S1.length() / 2) != std::string::npos) ? ""True"" : ""False"")
		<< ""\n"";
	
	// Part 6
	std::cout << ""The first half characters of S1 are: "";
	for (int i = 0; i < S1.length() / 2; i++) {
		std::cout << S1[i];
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter S1: Mhamad
Enter S2: Harmush
Enter S3: MhamadHarmush
---------------------------------------
The concatenation of S1 and S2 is equal S3? True
S1 is part of S2 or S1=S2? False
S2 is part of the second half of S1? False
The first half characters of S1 are: Mha
",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'التعامل مع النصوص', 'المصفوفات']",52.52457923679387,52.512289618396935,40.49620170467415,"[16.90505993562131, 19.43932796096399, 21.104997883660957, 21.104997883660957, 18.62693902976318, 15.086035488859636]"
17,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-7/ex-4-solution-using-cpp/e82cf9d2-87c5-4c28-8cd9-7838c86892fc_ex-4.PNG,"
#include <iostream>

int main() {

	int f = 1;
	int n = 0;
	double s = 0;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (double i = 1; i <= n; i++)
	{
		f *= i;
		s += i / ((i + 1) + f);
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = 1.17126
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",54.39093484419264,35.94546742209632,41.611223340640635,"[17.763351819142983, 21.92409905538133, 21.92409905538133]"
18,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب ناتج جمع جميع الأرقام من 1 إلى n و يخزنها في متغير إسمه s كالتالي.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-3/ex-3-solution-using-cpp/2521000a-3a4c-4a3e-8887-5921610c85ce_ex-3.PNG,"
#include <iostream>

int main() {

	int n, s = 0;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		s += i;
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = 10
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",54.39093484419264,32.19546742209632,42.68023326257496,"[18.60630646465394, 22.72786298909098, 22.72786298909098]"
19,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب ناتج ضرب جميع الأرقام من 1 إلى n و يخزنها في متغير إسمه m كالتالي.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-3/ex-4-solution-using-cpp/5fec87c6-deee-46e2-ad6c-a81c7d0782ad_ex-4.PNG,"
#include <iostream>

int main() {

	int n, m = 1;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		m *= i;
	}

	std::cout << ""M = "" << m;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
M = 24
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",54.39093484419264,32.19546742209632,43.63671582430567,"[19.411751990097024, 23.49411780273276, 23.49411780273276]"
20,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-4/ex-1-solution-using-cpp/522d0bb1-b16e-4a41-b55a-3fb61fb1dbc9_ex-1.PNG,"
#include <iostream>

int main() {

	int n;
	double s = 0;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (double i = 1; i <= n; i++)
	{
		s += 1 / i;
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = 2.08333
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",54.39093484419264,33.44546742209632,44.4975501298633,"[20.185314763482413, 24.22848986431685, 24.22848986431685]"
21,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-4/ex-3-solution-using-cpp/f673aa2a-f22a-4db7-bfe2-061e07fa8238_ex-3.PNG,"
#include <iostream>

int main() {

	int n;
	double s = 0;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (double i = 1; i <= n; i++)
	{
		s += (i * i) / (i + 1);
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = 7.28333
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",54.39093484419264,33.44546742209632,45.27640021584402,"[20.931549463675502, 24.93553385270863, 24.93553385270863]"
22,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-5/ex-1-solution-using-cpp/26d4188f-fc51-47af-8bd6-8d6ba57a1243_ex-1.PNG,"
#include <iostream>

int main() {

	int n = 0;
	int s = 0;
	int f = 1;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		f *= i;
		s += f;
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = 33
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",54.39093484419264,35.94546742209632,45.98444574855377,"[21.654182646111593, 25.618976323343425, 25.618976323343425]"
23,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-7/ex-2-solution-using-cpp/3a881aec-ebbd-45ff-897d-25b2e7d9e770_ex-2.PNG,"
#include <iostream>

int main() {

	int f = 1;
	int n = 0;
	double s = 0;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (double i = 1; i <= n; i++)
	{
		f *= i;
		s += 1 / (i + f);
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = 0.896825
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",54.39093484419264,35.94546742209632,46.63092210450614,"[22.356292769628567, 26.28189573505909, 26.28189573505909]"
24,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-2/ex-3-solution-using-cpp/b0cc8d3f-ebc1-4cbf-b878-e1f2db97a949_ex-3.PNG,"
#include <iostream>

int main() {

	int n;

	do
	{
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		for (int k = 1; k < i; k++)
		{
			std::cout << "" "";
		}

		std::cout << ""*"";

		for (int j = 1; j <= (n * 2) - (i * 2); j++)
		{
			std::cout << ""*"";
		}

		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 5
*********
 *******
  *****
   ***
    *
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 5  عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",58.35694050991501,39.1784702549575,47.22352543079582,"[23.04044521659131, 26.92685747022053, 26.92685747022053]"
25,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-2/ex-3-solution-using-cpp/b0cc8d3f-ebc1-4cbf-b878-e1f2db97a949_ex-3.PNG,"
#include <iostream>

int main() {

	int n;

	do
	{
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);
	
	for (int i = n; i >= 1; i--)
	{
		for (int k = 1; k <= n - i; k++)
		{
			std::cout << "" "";
		}

		std::cout << ""*"";

		for (int j = 1; j < (i * 2) - 1; j++)
		{
			std::cout << ""*"";
		}

		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 5
*********
 *******
  *****
   ***
    *
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 5  عند التشغيل.,الطريقة الثانية لحل التمرين و الحصول على نفس النتيجة.,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",58.35694050991501,39.1784702549575,47.88787624662741,"[23.748513493401347, 27.595735035229268, 27.595735035229268]"
26,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-2/ex-2-solution-using-cpp/98faafe3-9b2d-4a2a-8e39-4a4b976260b6_ex-2.PNG,"
#include <iostream>

int main() {

	int n;

	do
	{
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);
	
	for (int i = 1; i <= n; i++)
	{
		for (int k = 1; k <= n - i; k++)
		{
			std::cout << "" "";
		}

		std::cout << ""*"";

		for (int j = 1; j < (i * 2) - 1; j++)
		{
			std::cout << ""*"";
		}

		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 5
    *
   ***
  *****
 *******
*********
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 5  عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",58.35694050991501,39.1784702549575,48.501123153548875,"[24.439547133908015, 28.24757796393463, 28.24757796393463]"
27,التعامل مع الأرقام و النصوص,"قم بإنشاء برنامج يطلب من المستخدم إدخال نص و من ثم إدخل حرف واحد.
	بعدها سيقوم البرنامج بطباعة مكان كل  ( Index ) موجود عليه هذا الحرف في النص.",,"
#include <iostream>
#include <string>

int main() {

	std::string text;
	char character;

	std::cout << ""Enter any text: "";
	getline(std::cin, text);

	std::cout << ""Enter a character: "";
	std::cin >> character;

	for (int i = 0; i < text.length(); i++)
	{
		if (text[i] == character)
		{
			std::cout << ""'"" << character << ""' found at index: "" << i << ""\n"";
		}
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter any text: Harmash is the best site to learn programming
Enter a character: a
'a' found at index: 1
'a' found at index: 4
'a' found at index: 30
'a' found at index: 39
",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,"مثال: إذا قام المستخدم بإدخال النص ""Harmash is the best site to learn programming"" و من ثم أدخل الحرف ""a"" فيجب أن يطبع له النتيجة التالية عند التشغيل.

'a' found at index: 1
'a' found at index: 4
'a' found at index: 30
'a' found at index: 39
	","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'التعامل مع النصوص', 'المصفوفات']",58.92351274787534,36.961756373937675,49.068944363661345,"[25.115438875478354, 22.956974853893716, 28.884278993703667, 28.884278993703667, 26.61272504429737, 19.53091796249029]"
28,التعامل مع الأرقام و النصوص,"أكتب برنامج يطلب من المستخدم إدخال رقم. بعدها يعرض له إن كان هذا الرقم عبارة عن Palindrome أم لا.
الـ Palindrome عبارة عن رقم أعداده معكوسة بشكل متساوي من اليمين إلى اليسار و من اليسار إلى اليمين.",,"
#include <iostream>

int main() {

	int number;
	int originalNumber;
	int reversedNumber = 0;
	int remainder;

	std::cout << ""Enter a number: "";
	std::cin >> number;

	originalNumber = number;

	while (number != 0)
	{
		remainder = number % 10;
		reversedNumber = reversedNumber * 10 + remainder;
		number /= 10;
	}

	if (originalNumber == reversedNumber)
	{
		std::cout << originalNumber << "" is a palindrome"";
	}
	else
	{
		std::cout << originalNumber << "" is not a palindrome"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 1234
1234 is not a palindrome
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 1234 عند التشغيل.,أمثلة: الأرقام التالية جميعها تعتبر أرقام Palindrome: 1001 - 123321 - 4554 - 45654.,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",59.27217258662017,43.386086293310086,49.61140535412867,"[25.78287721050031, 23.797861190650153, 29.51252661692432, 29.51252661692432]"
29,إجراء عمليات حسابية,"قم بتعريف دالة إسمها Power(), عند استدعاءها نمرر لها عددين, فترجع ناتج قيمة العدد الأول مضاعفة بقيمة العدد الثاني.
	بعدها قم بتجربة هذه الدالة في البرنامج.",,"
#include <iostream>

int power(int a, int b) {

	int p = 1;

	for (int i = 1; i <= b; i++)
	{
		p *= a;
	}

	return p;

}


int main() {

	int x = 5;
	int y = 2;

	std::cout << x << "" ^ "" << y << "" = "" << power(x, y);

	char end; std::cin >> end;
	return 0;

}
		","
5 ^ 2 = 25
		",سنحصل على النتيجة التالية عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات', 'الدوال']",59.67894239848911,34.83947119924456,50.12548561358576,"[26.440855301852185, 30.131313996474894, 30.131313996474894, 26.809505305538686]"
30,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أكبر من صفر يمثل عدد أسطر الشكل الذي سيتم رسمه.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-8/ex-1-solution-using-cpp/23640d02-15ab-4ba2-acee-c9fec61b1d6b_ex-1.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			std::cout << j << "" "";
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 7
1 2 3 4 5 6 7 
1 2 3 4 5 6 7 
1 2 3 4 5 6 7 
1 2 3 4 5 6 7 
1 2 3 4 5 6 7 
1 2 3 4 5 6 7 
1 2 3 4 5 6 7 
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 7 عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",59.678942398489134,36.08947119924457,50.61547810836495,"[27.090804138311427, 30.742072121132832, 30.742072121132832]"
31,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-1/ex-3-solution-using-cpp/3d736ee8-dccf-43c9-8146-0087878d83bf_ex-3.PNG,"
#include <iostream>

int main() {

	int n;

	do
	{
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n + 1 - i; j++)
		{
			std::cout << ""*"";
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 5
*****
****
***
**
*
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 5  عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",59.678942398489134,36.08947119924457,51.07385818412611,"[27.73021550176466, 31.342292772784763, 31.342292772784763]"
32,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أكبر من صفر يمثل عدد أسطر الشكل الذي سيتم رسمه.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-8/ex-2-solution-using-cpp/7a541c0d-65e1-4bdc-b0d3-6d6724f12c51_ex-2.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			std::cout << i << "" "";
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 7
1 1 1 1 1 1 1 
2 2 2 2 2 2 2 
3 3 3 3 3 3 3 
4 4 4 4 4 4 4 
5 5 5 5 5 5 5 
6 6 6 6 6 6 6 
7 7 7 7 7 7 7 
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 7 عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",59.678942398489134,36.08947119924457,51.50358950515222,"[28.360077280306214, 31.932963839525012, 31.932963839525012]"
33,التعامل مع المصفوفات,"أكتب برنامج يطلب من المستخدم إعطائه عدد يمثل عدد عناصر مصفوفة إسمها arr و يخزنه في متغير إسمه n.
ملاحظة: عدد عناصر المصفوفة يجب أن يكون أكبر من صفر.
	بعدها ينشئ المصفوفة arr و يحدد أن عدد عناصرها هو العدد الذي أدخله المستخدم.
	بعدها يطلب من المستخدم إدخال عدد صحيح لكل عنصر فيها.
	في الأخير, سيعرض للمستخدم عدد عناصر المصفوفة, يليه جميع القيم المخزنة فيها على سطر واحد مع وضع فاصلة بين كل قيمتين.",,"
#include <iostream>

int main() {
	
	int n;
	int * arr;

	do {
		std::cout <<(""Enter arr length: "");
		std::cin >> n;
	}
	while (n <= 0);

	arr = new int[n];

	for (int i = 0; i < n; i++)
	{
		std::cout << ""Enter arr["" << i << ""]: "";
		std::cin >> arr[i];
	}

	std::cout << ""\nTotal number of items: "" << n;

	std::cout << ""\nArray values: "";

	for (int i = 0; i < n; i++)
	{
		std::cout << arr[i];

		if (i < n - 1)
		{
			std::cout << "", "";
		}
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter arr length: 4
Enter arr[0]: 2
Enter arr[1]: 7
Enter arr[2]: 5
Enter arr[3]: 3
Total number of items: 4
Array values: 2, 7, 5, 3
		",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'المصفوفات']",60.159670357970626,45.07983517898531,51.90727650369189,"[28.98125761801895, 25.22321758043855, 32.51495346543645, 32.51495346543645, 22.06433026313539]"
34,إجراء عمليات حسابية,"قم بتعريف دالة إسمها Factorial(), عند استدعاءها نمرر لها عدد, فترجع ناتج قيمة الـ Factorial له.
	بعدها قم بتجربة هذه الدالة في البرنامج.",,"
#include <iostream>

int factorial(int n) {
	int f = 1;

	for (int i = 1; i <= n; i++)
	{
		f *= i;
	}

	return f;
}


int main() {

	int x = 5;

	std::cout << x << ""! = "" << factorial(x);

	char end; std::cin >> end;
	return 0;

}
		","
5! = 120
		",سنحصل على النتيجة التالية عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات', 'الدوال']",60.73654390934844,34.11827195467422,52.29783715077067,"[29.598062505244723, 33.09256764086091, 33.09256764086091, 29.553824504802343]"
35,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر و أعمدة الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عددين أكبر من صفر, لأن عدد أسطر و أعمدة الرسمة لا يمكن أن يكون صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-2/ex-1-solution-using-cpp/f301dee0-5a63-49f3-a47f-f1e1f98e8431_ex-1.PNG,"
#include <iostream>

int main() {

	int n;
	int m;

	do
	{
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	do
	{
		std::cout << ""Enter the number of columns: "";
		std::cin >> m;
	}
	while (m <= 0);

	for (int i = 1; i <= n; i++)
	{
		for (int k = 1; k < i; k++)
		{
			std::cout << "" "";
		}

		for (int j = 1; j <= m; j++)
		{
			std::cout << ""*"";
		}

		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 5
Enter the number of columns: 10
**********
 **********
  **********
   **********
    **********
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 5 كعدد الأسطر و الرقم 10 كعدد الأعمدة عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",61.070523333830316,45.53526166691516,52.67845986535613,"[30.211554748306053, 33.66686917212095, 33.66686917212095]"
36,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر و أعمدة الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عددين أكبر من صفر, لأن عدد أسطر و أعمدة الرسمة لا يمكن أن يكون صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-1/ex-5-solution-using-cpp/de7cf833-dd60-4da4-bd81-1927ddcb2bc2_ex-5.PNG,"
#include <iostream>

int main() {

	int n;
	int m;

	do
	{
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	do
	{
		std::cout << ""Enter the number of columns: "";
		std::cin >> m;
	} while (m <= 0);

	for (int i = 1; i <= n; i++)
	{
		for (int k = 1; k <= n - i; k++)
		{
			std::cout << "" "";
		}

		for (int j = 1; j <= m; j++)
		{
			std::cout << ""*"";
		}

		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;
	
}
		","
Enter the number of lines: 5
Enter the number of columns: 10
    **********
   **********
  **********
 **********
**********
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 5 كعدد الأسطر و الرقم 10 كعدد الأعمدة عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",61.070523333830316,45.53526166691516,53.04490504642048,"[30.820321146860355, 34.23644485887394, 34.23644485887394]"
37,إجراء عمليات حسابية,أكتب برنامج عند تشغيله يقوم بطباعة جدول الضرب من 1 إلى 10 مع وضع سطر فارغ بين كل جدولين.,,"
#include <iostream>

int main() {

	for (int i = 1; i <= 10; i++)
	{
		for (int j = 1; j <= 10; j++)
		{
			std::cout << i << "" * "" << j << "" = "" << (i * j) << ""\n"";
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		",,"سنحصل على النتيجة التالية عند التشغيل.


				1 * 1 = 1
				1 * 2 = 2
				1 * 3 = 3
				1 * 4 = 4
				1 * 5 = 5
				1 * 6 = 6
				1 * 7 = 7
				1 * 8 = 8
				1 * 9 = 9
				1 * 10 = 10
				
2 * 1 = 2
				2 * 2 = 4
				2 * 3 = 6
				2 * 4 = 8
				2 * 5 = 10
				2 * 6 = 12
				2 * 7 = 14
				2 * 8 = 16
				2 * 9 = 18
				2 * 10 = 20
				
3 * 1 = 3
				3 * 2 = 6
				3 * 3 = 9
				3 * 4 = 12
				3 * 5 = 15
				3 * 6 = 18
				3 * 7 = 21
				3 * 8 = 24
				3 * 9 = 27
				3 * 10 = 30
				
4 * 1 = 4
				4 * 2 = 8
				4 * 3 = 12
				4 * 4 = 16
				4 * 5 = 20
				4 * 6 = 24
				4 * 7 = 28
				4 * 8 = 32
				4 * 9 = 36
				4 * 10 = 40
				
5 * 1 = 5
				5 * 2 = 10
				5 * 3 = 15
				5 * 4 = 20
				5 * 5 = 25
				5 * 6 = 30
				5 * 7 = 35
				5 * 8 = 40
				5 * 9 = 45
				5 * 10 = 50
				
6 * 1 = 6
				6 * 2 = 12
				6 * 3 = 18
				6 * 4 = 24
				6 * 5 = 30
				6 * 6 = 36
				6 * 7 = 42
				6 * 8 = 48
				6 * 9 = 54
				6 * 10 = 60
				
7 * 1 = 7
				7 * 2 = 14
				7 * 3 = 21
				7 * 4 = 28
				7 * 5 = 35
				7 * 6 = 42
				7 * 7 = 49
				7 * 8 = 56
				7 * 9 = 63
				7 * 10 = 70
				
8 * 1 = 8
				8 * 2 = 16
				8 * 3 = 24
				8 * 4 = 32
				8 * 5 = 40
				8 * 6 = 48
				8 * 7 = 56
				8 * 8 = 64
				8 * 9 = 72
				8 * 10 = 80
				
9 * 1 = 9
				9 * 2 = 18
				9 * 3 = 27
				9 * 4 = 36
				9 * 5 = 45
				9 * 6 = 54
				9 * 7 = 63
				9 * 8 = 72
				9 * 9 = 81
				9 * 10 = 90
				
10 * 1 = 10
				10 * 2 = 20
				10 * 3 = 30
				10 * 4 = 40
				10 * 5 = 50
				10 * 6 = 60
				10 * 7 = 70
				10 * 8 = 80
				10 * 9 = 90
				10 * 10 = 100
			

","


				1 * 1 = 1
				1 * 2 = 2
				1 * 3 = 3
				1 * 4 = 4
				1 * 5 = 5
				1 * 6 = 6
				1 * 7 = 7
				1 * 8 = 8
				1 * 9 = 9
				1 * 10 = 10
				
2 * 1 = 2
				2 * 2 = 4
				2 * 3 = 6
				2 * 4 = 8
				2 * 5 = 10
				2 * 6 = 12
				2 * 7 = 14
				2 * 8 = 16
				2 * 9 = 18
				2 * 10 = 20
				
3 * 1 = 3
				3 * 2 = 6
				3 * 3 = 9
				3 * 4 = 12
				3 * 5 = 15
				3 * 6 = 18
				3 * 7 = 21
				3 * 8 = 24
				3 * 9 = 27
				3 * 10 = 30
				
4 * 1 = 4
				4 * 2 = 8
				4 * 3 = 12
				4 * 4 = 16
				4 * 5 = 20
				4 * 6 = 24
				4 * 7 = 28
				4 * 8 = 32
				4 * 9 = 36
				4 * 10 = 40
				
5 * 1 = 5
				5 * 2 = 10
				5 * 3 = 15
				5 * 4 = 20
				5 * 5 = 25
				5 * 6 = 30
				5 * 7 = 35
				5 * 8 = 40
				5 * 9 = 45
				5 * 10 = 50
				
6 * 1 = 6
				6 * 2 = 12
				6 * 3 = 18
				6 * 4 = 24
				6 * 5 = 30
				6 * 6 = 36
				6 * 7 = 42
				6 * 8 = 48
				6 * 9 = 54
				6 * 10 = 60
				
7 * 1 = 7
				7 * 2 = 14
				7 * 3 = 21
				7 * 4 = 28
				7 * 5 = 35
				7 * 6 = 42
				7 * 7 = 49
				7 * 8 = 56
				7 * 9 = 63
				7 * 10 = 70
				
8 * 1 = 8
				8 * 2 = 16
				8 * 3 = 24
				8 * 4 = 32
				8 * 5 = 40
				8 * 6 = 48
				8 * 7 = 56
				8 * 8 = 64
				8 * 9 = 72
				8 * 10 = 80
				
9 * 1 = 9
				9 * 2 = 18
				9 * 3 = 27
				9 * 4 = 36
				9 * 5 = 45
				9 * 6 = 54
				9 * 7 = 63
				9 * 8 = 72
				9 * 9 = 81
				9 * 10 = 90
				
10 * 1 = 10
				10 * 2 = 20
				10 * 3 = 30
				10 * 4 = 40
				10 * 5 = 50
				10 * 6 = 60
				10 * 7 = 70
				10 * 8 = 80
				10 * 9 = 90
				10 * 10 = 100
			

","['الحلقات', 'أنواع البيانات', 'الأساسيات']",62.3229461756374,31.1614730878187,53.39154237985973,"[31.422484929539618, 34.7994179297519, 34.7994179297519]"
38,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-1/ex-4-solution-using-cpp/06da100f-9cd5-4731-8215-10463402ca21_ex-4.PNG,"
#include <iostream>

int main() {

	int n;

	do
	{
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		for (int k = 1; k < i; k++)
		{
			std::cout << "" "";
		}

		for (int j = 1; j <= n + 1 - i; j++)
		{
			std::cout << ""*"";
		}

		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 5
*****
 ****
  ***
   **
    *
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 5  عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",62.851746931067034,40.17587346553351,53.74469099401375,"[32.0268191391238, 35.36456142753478, 35.36456142753478]"
39,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-1/ex-2-solution-using-cpp/b9f9f9a1-3815-4814-8dbc-dc0ded671fc1_ex-2.PNG,"
#include <iostream>

int main() {

	int n;

	do
	{
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		for (int k = 1; k <= n - i; k++)
		{
			std::cout << "" "";
		}
		for (int j = 1; j <= i; j++)
		{
			std::cout << ""*"";
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 5
    *
   **
  ***
 ****
*****
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 5  عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",62.851746931067034,40.17587346553351,54.08991367544579,"[32.628511371133996, 35.92706294774368, 35.92706294774368]"
40,التعامل مع الأرقام و النصوص,"قم بتعريف دالة إسمها ReverseString, عند استدعاءها نمرر لها نص, فترجعه معكوساً.
	بعدها قم بتجربة هذه الدالة في البرنامج مع جعل المستخدم هو يدخل النص الذي سيتم عرضه بشكل عكسي.",,"
#include <iostream>
#include <string>

std::string reverseString(std::string s)
{
	std::string newS = """";

	for (int i = 0; i < s.length(); i++)
	{
		newS = s[i] + newS;
	}

	return newS;
}

int main() {

	std::string text;

	std::cout << ""Enter any text: "";
	getline(std::cin, text);

	std::string reversedText = reverseString(text);

	std::cout << ""Reversed Text: "" << reversedText;

	char end; std::cin >> end;
	return 0;

}
		","
Enter any text:  I love programming
Reversed Text: gnimmargorp evol I
		",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,مثال: إذا قمنا باستخدام الدالة ReverseString() و تمرير النص I love programming فمن المفترض أن ترجعه هكذا gnimmargorp evol I.,"['الحلقات', 'أنواع البيانات', 'الأساسيات', 'التعامل مع النصوص', 'المصفوفات', 'الدوال']",62.851746931067055,40.17587346553353,54.41787522280622,"[33.22444989178699, 36.48381075659536, 36.48381075659536, 33.52390712555079, 24.488498090141753, 32.280705882349544]"
41,التعامل مع المصفوفات,"أكتب برنامج يطلب من المستخدم إعطائه عدد يمثل عدد عناصر مصفوفة إسمها arr و يخزنه في متغير إسمه n.
ملاحظة: عدد عناصر المصفوفة يجب أن يكون أكبر من صفر.
	بعدها ينشئ المصفوفة arr و يحدد أن عدد عناصرها هو العدد الذي أدخله المستخدم.
	بعدها يطلب من المستخدم إدخال عدد لكل عنصر فيها.
	في الأخير, يعرض للمستخدم متوسط هذه القيم.",,"
#include <iostream>

int main() {
	
	int n;
	double s = 0;
	double avg;
	double *arr;

	do
	{
		std::cout << ""Enter arr length: "";
		std::cin >> n;
	}
	while (n <= 0);

	arr = new double[n];

	for (int i = 0; i < n; i++)
	{
		std::cout << ""Enter arr["" << i << ""]: "";
		std::cin >> arr[i];
	}

	for (int i = 0; i < n; i++)
	{
		s += arr[i];
	}

	avg = s / n;

	std::cout << ""\nAverage = "" << avg << ""\n"";

	char end; std::cin >> end;
	return 0;

}
		","
Enter arr length: 4
Enter arr[0]: 2
Enter arr[1]: 6
Enter arr[2]: 9
Enter arr[3]: 5
Average = 5.5
		",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات', 'المصفوفات']",63.90934844192635,46.95467422096317,54.72983864590517,"[33.815055704352815, 37.03522585735989, 37.03522585735989, 26.179787485142988]"
42,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-6/ex-5-solution-using-cpp/dd52cec3-4d4a-4637-9e7f-b50d7eb43a8f_ex-5.PNG,"
#include <iostream>

int main() {

	int n = 0;
	int s = 0;
	int p;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 2; i <= n; i += 2)
	{
		p = 1;

		for (int j = 1; j <= i; j++)
		{
			p *= i;
		}

		s += p;
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = 260
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",64.15341032904772,43.32670516452386,55.04586027991132,"[34.40701425388771, 37.58799369509348, 37.58799369509348]"
43,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-6/ex-1-solution-using-cpp/ab095fac-aab4-41b1-b803-d53b41adabeb_ex-1.PNG,"
#include <iostream>

int main() {

	int n = 0;
	int s = 0;
	int p;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		p = 1;

		for (int j = 1; j <= i; j++)
		{
			p *= i;
		}

		s += p;
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = 288
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",64.15341032904772,43.32670516452386,55.351446408781044,"[34.995494301710465, 38.13728303111493, 38.13728303111493]"
44,التعامل مع المصفوفات,"أكتب برنامج يطلب من المستخدم إعطائه عدد يمثل عدد عناصر مصفوفة إسمها arr و يخزنه في متغير إسمه n.
ملاحظة: عدد عناصر المصفوفة يجب أن يكون أكبر من صفر.
	بعدها ينشئ المصفوفة arr و يحدد أن عدد عناصرها هو العدد الذي أدخله المستخدم.
	بعدها يطلب من المستخدم إدخال عدد صحيح لكل عنصر فيها.
	في الأخير, سيعرض للمستخدم ناتج جمع جميع قيم عناصر المصفوفة.",,"
#include <iostream>

int main() {
	
	int n;
	int s = 0;
	int * arr;

	do {
		std::cout <<(""Enter arr length: "");
		std::cin >> n;
	}
	while (n <= 0);

	arr = new int[n];

	for (int i = 0; i < n; i++)
	{
		std::cout << ""Enter arr["" << i << ""]: "";
		std::cin >> arr[i];
	}

	for (int i = 0; i < n; i++)
	{
		s += arr[i];
	}

	std::cout << ""\nSum of all elements: "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter arr length: 4
Enter arr[0]: 2
Enter arr[1]: 7
Enter arr[2]: 5
Enter arr[3]: 3
Sum of all elements: 17
		",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات', 'المصفوفات']",64.41031757864917,44.705158789324585,55.6431422590658,"[35.57934425667156, 38.681942274274725, 38.681942274274725, 28.071523610164785]"
45,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون مزدوجاً أو قيمته تساوي صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-3/ex-1-solution-using-cpp/89c74957-eb5a-4d32-aafa-6c961a8e29a1_ex-1.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= (n / 2) + 1; i++)
	{
		for (int k = 1; k < (n / 2) - i + 2; k++)
		{
			std::cout << "" "";
		}

		std::cout << ""*"";
		
		for (int j = 1; j < (i * 2) - 1; j++)
		{
			std::cout << ""*"";
		}

		std::cout << ""\n"";
	}

	for (int i = 1; i <= (n / 2); i++)
	{
		for (int k = 1; k <= i; k++)
		{
			std::cout << "" "";
		}
		
		for (int j = 1; j < ((n / 2) * 2) - (i * 2) + 2; j++)
		{
			std::cout << ""*"";
		}

		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 9
    *
   ***
  *****
 *******
*********
 *******
  *****
   ***
    *
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 9 عند التشغيل.,الطريقة الثانية لحل التمرين و الحصول على نفس النتيجة.,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",64.54390934844193,49.771954674220964,55.92616195570388,"[36.1603021604171, 39.22370946621896, 39.22370946621896]"
46,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-5/ex-5-solution-using-cpp/10596520-cab1-4e08-8e0f-498198a959b0_ex-5.PNG,"
#include <iostream>

int main() {

	int n = 0;
	int s = 0;
	int f = 1;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		f *= i;

		if (i % 2 == 0)
		{
			s += f;
		}
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = 26
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",64.96694995278563,42.48347497639281,56.19905778920475,"[36.73788544311691, 27.31387734887683, 39.762102037117465, 39.762102037117465]"
47,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون مزدوجاً أو قيمته تساوي صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-2/ex-4-solution-using-cpp/b7ac9046-1d25-451b-a7ab-13f21beb0277_ex-4.PNG,"
#include <iostream>

int main() {

	int n;

	do
	{
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0 || n % 2 == 0);

	for (int i = 1; i < (n / 2) + 2; i++)
	{
		for (int j = 1; j <= i; j++)
		{
			std::cout << ""*"";
		}
		std::cout << ""\n"";
	}

	for (int i = 1; i <= n / 2; i++)
	{
		for (int j = 1; j < (n / 2) + 2 - i; j++)
		{
			std::cout << ""*"";
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 5
*
**
***
**
*
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 5  عند التشغيل.,الطريقة الثانية لحل التمرين و الحصول على نفس النتيجة.,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",64.96694995278564,43.73347497639282,56.467101644295376,"[37.31385139967996, 40.298877281879214, 40.298877281879214]"
48,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر و أعمدة الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عددين أكبر من صفر, لأن عدد أسطر و أعمدة الرسمة لا يمكن أن يكون صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-3/ex-5-solution-using-cpp/234d40be-f74f-4281-bf4d-6809ce82ae0d_ex-5.PNG,"
#include <iostream>

int main() {

	int n;
	int m;


	do {
		std::cout << ""Enter the height: "";
		std::cin >> n;
	}
	while (n <= 0);
	
	do {
		std::cout << ""Enter the width: "";
		std::cin >> m;
	}
	while (m <= 0);

	for (int i = 1; i <= n; i++)
	{
		if (i == 1 || i == n)
		{
			for (int j = 1; j <= m; j++)
			{
				std::cout << ""*"";
			}
		}
		else
		{
			std::cout << ""*"";
			for (int k = 1; k < m - 1; k++)
			{
				std::cout << "" "";
			}
			std::cout << ""*"";
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the height: 5
Enter the width: 10
**********
*        *
*        *
*        *
**********
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 5 كطول المستطيل و الرقم 10 كعرض المستطيل عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",65.42677669663752,52.71338834831876,56.7239770054239,"[37.886094524922314, 28.14891642755054, 40.83192969532027, 40.83192969532027]"
49,التعامل مع المصفوفات,"أكتب برنامج يطلب من المستخدم إعطائه عدد يمثل عدد عناصر مصفوفة إسمها arr و يخزنه في متغير إسمه n.
ملاحظة: عدد عناصر المصفوفة يجب أن يكون أكبر من صفر.
	بعدها ينشئ المصفوفة arr و يحدد أن عدد عناصرها هو العدد الذي أدخله المستخدم.
	بعدها يقوم بإعطاء قيمة عشوائية بين 1 و 10 لكل عنصر فيها.
	في الأخير, سيعرض للمستخدم جميع القيم المخزنة فيها على سطر واحد مع وضع فاصلة بين كل قيمتين و من ثم ناتج جمع جميع العناصر.",,"
#include <iostream>
#include <cstdlib>
#include <ctime>

int main() {

	// هنا قمنا بجعل الرقم العشوائي يتم توليده بالإعتماد على وقت جهاز المستخدم كنقطة بداية
	// C++ ملاحظة: هذه الطريقة, هي الطريقة المعتمدة في التحضير لتوليد أرقام عشوائية في لغة
	srand((unsigned) time(0));

	int n;
	int s = 0;
	int *arr;

	do
	{
		std::cout << ""Enter array length: "";
		std::cin >> n;
	}
	while (n <= 0);

	arr = new int[n];

	for (int i = 0; i < n; i++)
	{
		arr[i] = (rand() % 10) + 1;
	}

	std::cout << ""\nArray values: "";

	for (int i = 0; i < n; i++)
	{
		std::cout << arr[i];

		if (i < n - 1)
		{
			std::cout << "", "";
		}
	}

	for (int i = 0; i < n; i++)
	{
		s += arr[i];
	}

	std::cout << ""\nSum of all elements: "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
			Enter array length: 10
			Array values: 3, 8, 3, 6, 1, 4, 9, 9, 6, 4
			Sum of all elements: 53
		",في حال تم إدخال الرقم 10 عند التشغيل سنحصل على نتيجة تشبه النتيجة التالية و ليس مثلها لأنه في كل مرة نقوم فيها بتشغيل البرنامج سيتم توليد أرقام عشوائية مختلفة.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'المصفوفات']",66.14206274262929,54.321031371314646,56.97741620899349,"[38.45719226431169, 28.893462168674393, 41.363836722908346, 41.363836722908346, 30.1035831807756]"
50,التعامل مع الأرقام و النصوص,"قم بتعريف دالة إسمها DoubleChars, نمرر لها نص عند إستدعاءها فتعيد لنا نسخة من هذا النص كل حرف فيها مكرر مرتين.",,"
#include <iostream>
#include <string>

std::string doubleChars(std::string text) {

	std::string newText = """";

	for (int i = 0; i < text.length(); i++)
	{
		newText += text[i];
		newText += text[i];
	}

	return newText;

}

int main() {

	std::string text = ""Iron Man"";
	std::string newText = doubleChars(text);

	std::cout << ""Before: "" << text << ""\n"";
	std::cout << ""After:  "" << newText << ""\n"";

	char end; std::cin >> end;
	return 0;

}
		","
Before: Iron Man
After:  IIrroonn  MMaann
		",سنحصل على النتيجة التالية عند التشغيل.,"مثال: إذا قمنا باستخدام الدالة DoubleChars() و تمرير النص ""Iron Man"" فإنها سترجع النص ""IIrroonn  MMaann"".","['الحلقات', 'أنواع البيانات', 'الأساسيات', 'التعامل مع النصوص', 'المصفوفات', 'الدوال']",66.28895184135978,41.89447592067989,57.23146296892292,"[39.02849252248769, 41.89594626928303, 41.89594626928303, 39.58997483579482, 31.775567021387005, 35.23877048459046]"
51,التعامل مع المصفوفات,"أكتب برنامج يطلب من المستخدم إعطائه عدد يمثل عدد عناصر مصفوفة إسمها arr و يخزنه في متغير إسمه n.
ملاحظة: عدد عناصر المصفوفة يجب أن يكون أكبر من صفر.
	بعدها ينشئ المصفوفة arr و يحدد أن عدد عناصرها هو العدد الذي أدخله المستخدم.
	بعدها يطلب من المستخدم إدخال عدد صحيح لكل عنصر فيها.
	بعدها يعرض للمستخدم جميع القيم التي أدخلها بنفس الترتيب.
	في الأخير يقوم بترتيب جميع القيم بشكل عكسي ( مثلاً القيمة الأخيرة تصبح في الأول ) و من ثم يعرض قيم المصفوفة من جديد.",,"
#include <iostream>

int main() {
	
	int n;
	int * arr;
	int temp;

	do
	{
		std::cout << ""Enter arr length: "";
		std::cin >> n;
	}
	while (n <= 0);

	arr = new int[n];

	for (int i = 0; i < n; i++)
	{
		std::cout << ""Enter arr["" << i << ""]: "";
		std::cin >> arr[i];
	}

	std::cout << ""\nCurrent order\n"";

	for (int i = 0; i < n; i++)
	{
		std::cout << arr[i] << "" "";
	}

	for (int i = 0; i < n / 2; i++)
	{
		temp = arr[i];
		arr[i] = arr[n - 1 - i];
		arr[n - 1 - i] = temp;
	}

	std::cout << ""\n\nAfter reversing the order\n"";

	for (int i = 0; i < n; i++)
	{
		std::cout << arr[i] << "" "";
	}

	std::cout << ""\n"";

	char end; std::cin >> end;
	return 0;

}
		","
Enter arr length: 4
Enter arr[0]: 1
Enter arr[1]: 2
Enter arr[2]: 3
Enter arr[3]: 4
Current order
1 2 3 4 
After reversing the order
4 3 2 1
		",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات', 'المصفوفات']",67.08215297450425,56.04107648725213,57.477710432450706,"[39.59719301519646, 42.425456050190505, 42.425456050190505, 33.444951096531184]"
52,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغيرين s و t.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-7/ex-1-solution-using-cpp/521cf6d7-77b0-4bcf-b5f9-06a162479f80_ex-1.PNG,"
#include <iostream>

int main() {

	int n = 0;
	int s = 0;
	int t = 0;
	int f = 1;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		f *= i;

		if (i % 2 == 1)
		{
			s += f;
		}
		else
		{
			t += f;
		}
	}

	std::cout << ""S = "" << s << ""\n"";
	std::cout << ""T = "" << t;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = 7
T = 26
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",67.08215297450425,48.54107648725213,57.7259441238856,"[40.16655558387427, 29.80303748023909, 42.95562790706701, 42.95562790706701]"
53,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون مزدوجاً أو قيمته تساوي صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-2/ex-5-solution-using-cpp/546916f3-0911-4639-8d1a-af9620cb45a9_ex-5.PNG,"
#include <iostream>

int main() {

	int n;

	do
	{
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	} while (n <= 0 || n % 2 == 0);

	for (int i = 1; i < (n / 2) + 2; i++)
	{
		for (int k = 1; k < (n / 2) - i + 2; k++)
		{
			std::cout << "" "";
		}
		for (int j = 1; j <= i; j++)
		{
			std::cout << ""*"";
		}
		std::cout << ""\n"";
	}

	for (int i = 1; i <= n / 2; i++)
	{
		for (int k = 1; k <= i; k++)
		{
			std::cout << "" "";
		}
		for (int j = 1; j < (n / 2) + 2 - i; j++)
		{
			std::cout << ""*"";
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 5
  *
 **
***
 **
  *
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 5  عند التشغيل.,الطريقة الثانية لحل التمرين و الحصول على نفس النتيجة.,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",67.61095372993388,50.05547686496694,57.96481050620975,"[40.73279571618184, 43.48267732757327, 43.48267732757327]"
54,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد واحد يمثل طول أسطر و أعمدة الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد أكبر من صفر, لأن عدد الأسطر أو الأعمدة لا يمكن أن يكون صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-3/ex-4-solution-using-cpp/ec2abc14-3d84-47fc-b8f3-3475c3e35206_ex-4.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter square side length: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		if (i == 1 || i == n)
		{
			for (int j = 1; j <= n; j++)
			{
				std::cout << ""*"";
			}
		}
		else
		{
			std::cout << ""*"";
			for (int k = 1; k <= n - 2; k++)
			{
				std::cout << "" "";
			}
			std::cout << ""*"";
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 10
**********
*        *
*        *
*        *
*        *
*        *
*        *
*        *
*        *
**********
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 10 عند التشغيل.,"الشكل الذي يظهر لك في النتيجة النهائية عبارة عن مربع لأن عدد النجوم التي تظهر عامودياً يساوي عدد النجوم التي تظهر أفقياً, لكنه لا يظهر لك كذلك بسبب الهامش الإفتراضي الذي يقوم الحاسوب بوضعه بين الأسطر.","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",67.750111823468,47.625055911734,58.20218527904319,"[41.298538645325834, 30.621850538558952, 44.00922954491596, 44.00922954491596]"
55,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أكبر من صفر يمثل عدد أسطر الشكل الذي سيتم رسمه.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-9/ex-3-solution-using-cpp/e293a7f7-2414-41db-ba21-8dfc6845f8bc_ex-3.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if (j <= i)
			{
				std::cout << j << "" "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 6
1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5 
1 2 3 4 5 6 
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 6 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",69.03464807147527,42.01732403573764,58.43282865273126,"[41.8620377747547, 31.3587976697223, 44.53353796254353, 44.53353796254353]"
56,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أكبر من صفر يمثل عدد أسطر الشكل الذي سيتم رسمه.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-9/ex-4-solution-using-cpp/bd4f53b6-7d83-48d0-9be2-e418470ff813_ex-4.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if (j <= i)
			{
				std::cout << i << "" "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 6
1 
2 2 
3 3 3 
4 4 4 4 
5 5 5 5 5 
6 6 6 6 6 6 
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 6 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",69.03464807147527,42.01732403573764,58.67246376186527,"[42.428534149332215, 32.09874204603429, 45.060843625319734, 45.060843625319734]"
57,التعامل مع الأرقام و النصوص,"قم بتعريف دالة إسمها CountOccurrences, عند استدعاءها نمرر لها نصيّن, فترجع عدد صحيح يمثل كم مرة النص الثاني مكرر في النص الأول.
	بعدها قم بتجربة هذه الدالة في البرنامج مع جعل المستخدم هو من يدخل النصيّن.",,"
#include <iostream>
#include <string>

int CountOccurrences(std::string s1, std::string s2)
{

	int counter = 0;

	for (int i = 0; i < s1.length() - s2.length() + 1; i++)
	{
		if (s1.substr(i, s2.length()) == s2)
		{
			counter++;
		}
	}

	return counter;
}


int main() {

	std::string text;
	std::string keyword;

	std::cout << ""Enter any text: "";
	getline(std::cin, text);

	std::cout << ""Enter word to search occurrences: "";
	getline(std::cin, keyword);

	int result = CountOccurrences(text, keyword);

	std::cout << ""Total occurrences of '"" << keyword << ""' is: "" << result;

	char end; std::cin >> end;
	return 0;

}
		","
Enter any text: I like cats. I have one cat called Lola
Enter word to search occurrences: cat
Total occurrences of 'cat' is: 2
		",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,مثال: إذا قمنا باستخدام الدالة CountOccurrences() لمعرفة كم مرة تكررت الكلمة cat في النص I like cats. I have one cat called Lola فإنها سترجع الرقم 2.,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'التعامل مع النصوص', 'الدوال']",69.49952785646835,48.499763928234174,58.903690621555974,"[42.9922277740953, 32.83588367253186, 45.58534653828151, 45.58534653828151, 45.2755891815443, 37.816381722336835]"
58,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون مزدوجاً أو قيمته تساوي صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-3/ex-1-solution-using-cpp/89c74957-eb5a-4d32-aafa-6c961a8e29a1_ex-1.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		if (i <= n / 2)
		{
			for (int k = 1; k < (n / 2) - i + 2; k++)
			{
				std::cout << "" "";
			}

			std::cout << ""*"";
			
			for (int j = 1; j < (i * 2) - 1; j++)
			{
				std::cout << ""*"";
			}
		}
		else
		{
			for (int k = 1; k < i - (n / 2); k++)
			{
				std::cout << "" "";
			}
			
			std::cout << ""*"";

			for (int j = 1; j <= (n * 2) - (i * 2); j++)
			{
				std::cout << ""*"";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 9
    *
   ***
  *****
 *******
*********
 *******
  *****
   ***
    *
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 9 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",69.62039660056656,53.56019830028328,59.13296438911109,"[43.555270368146516, 33.57237426831755, 46.10919842053143, 46.10919842053143]"
59,التعامل مع المصفوفات,"أكتب برنامج يطلب من المستخدم إعطائه عددين, العدد الأول يمثل عدد أسطر مصفوفة ثنائية ( ذات بعدين ) إسمها matrix و العدد الثاني يمثل عدد أعمدتها.
ملاحظة: عدد أسطر و أعمدة المصفوفة يجب أن يكون أكبر من صفر.
	بعدها يطلب من المستخدم إدخال عدد صحيح لكل عنصر فيها.
	في الأخير, سيعرض للمستخدم جميع القيم المخزنة فيها بشكل مرتب.",,"
#include <iostream>

int main() {

	int rows = 0;
	int cols = 0;
	int **matrix;

	do
	{
		std::cout << ""Enter rows number: "";
		std::cin >> rows;
	}
	while (rows <= 0);

	do
	{
		std::cout << ""Enter cols number: "";
		std::cin >> cols;
	}
	while (cols <= 0);

	matrix = new int *[rows];
	for (int i = 0; i < rows; i++)
	{
		matrix[i] = new int[cols];
	}

	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{
			std::cout << ""Enter matrix["" << i << ""]["" << j << ""]: "";
			std::cin >> matrix[i][j];
		}
	}

	std::cout << ""\nmatrix values\n"";

	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{
			std::cout << matrix[i][j] << "" "";
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
			Enter rows number: 2
			Enter columns number: 3
			Enter matrix[0][0]: 1
			Enter matrix[0][1]: 2
			Enter matrix[0][2]: 3
			Enter matrix[1][0]: 4
			Enter matrix[1][1]: 5
			Enter matrix[1][2]: 6
			matrix values
			1 2 3 
			4 5 6 
		",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات', 'المصفوفات']",70.25495750708215,58.87747875354108,59.35600489908185,"[44.11623520966962, 46.63097255025323, 46.63097255025323, 35.65835083937648]"
60,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-8/ex-3-solution-using-cpp/c98d7149-2927-420e-8a6a-976732db2bc3_ex-3.PNG,"
#include <iostream>

int main() {

	int n = 0;
	double s = 0;
	double f;
	double p;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		p = 1;
		for (int j = 1; j <= i; j++)
		{
			p *= i;
		}

		f = 1;
		for (int j = 1; j <= i; j++)
		{
			f *= j;
		}

		s += p / f;
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = 18.1667
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",70.25495750708215,51.37747875354108,59.57955444242994,"[44.677369728985155, 47.152916357767474, 47.152916357767474]"
61,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-8/ex-4-solution-using-cpp/bc16a0dd-c0f6-48fe-bfdb-a2e1cab6f96a_ex-4.PNG,"
#include <iostream>

int main() {

	int n = 0;
	double s = 0;
	double f;
	double p;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		f = 1;
		for (int j = 1; j <= i; j++)
		{
			f *= j;
		}

		p = 1;
		for (int j = 1; j <= i; j++)
		{
			p *= i;
		}

		s += f / p;
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = 1.81597
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",70.25495750708215,51.37747875354108,59.795774492553505,"[45.23606108389252, 47.67241700087354, 47.67241700087354]"
62,التعامل مع المصفوفات,"قم بتعريف دالة إسمها FindAll, مهمتها البحث في مصفوفة أحادية ( تتألف من أعداد صحيحة ) نمررها لها عن قيمة محددة أيضاً نمررها لها, و من ثم طباعة Index كل عنصر يملك هذه القيمة.
	بعدها قم بتجربة هذه الدالة في البرنامج.",,"
#include <iostream>

// هنا قمنا بتعريف الدالة
void findAll(int arr[], int arrLength, int x) {

	for (int i = 0; i < arrLength; i++)
	{
		if (arr[i] == x)
		{
			printf(""'%d' found at index %d\n"", x, i);
		}
	}

}

int main() {
	
	// هنا قمنا بتجهيز القيم التي سنمررها للدالة
	int array[] = { 1, 2, 3, 2, 5, 2, 7, 2 };
	int arrayLength = sizeof(array) / sizeof(array[0]);
	int value = 2;

	// هنا قمنا بتجربة الدالة
	findAll(array, arrayLength, value);

	char end; std::cin >> end;
	return 0;

}
		","
'2' found at index: 1
'2' found at index: 3
'2' found at index: 5
'2' found at index: 7
		",سنحصل على النتيجة التالية عند التشغيل.,مساعدة: يجب تمرير حجم المصفوفة أيضاً للدالة لأنه لا يمكن معرفته بالطرق العادية من داخل الدالة.,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'المصفوفات', 'الدوال']",70.25495750708215,40.12747875354108,60.005019702350495,"[45.79242749202437, 34.52312537933135, 48.18959269720408, 48.18959269720408, 37.46199069443429, 40.20369343613703]"
63,التعامل مع الأرقام و النصوص,"قم بتعريف دالة إسمها ReplaceAll, فكرتها البحث في النص عن جزئية ( كلمة أو جملة ) محددة و تبديلها  بجزئية أخرى.
	عند استدعاءها يجب أن نمرر لها ثلاث نصوص. الأول يمثل نص عادي, الثاني يمثل الجزئية التي نريد البحث عنها, و الثالث يمثل الجزئية التي نريد وضعها مكان الجزئية الثانية.
	في النهاية يجب أن ترجع نسخة من النص الأول بعد أن تم تبديل الجزئية التي البحث عنها بالجزئية التي نريد وضعها مكانها.
	بعدها قم بتجربة هذه الدالة في البرنامج.",,"
#include <iostream>
#include <string>

std::string replaceAll(std::string text, std::string find, std::string replacement) {

	int L1 = text.length();
	int L2 = find.length();

	std::string newText = """";

	for (int i = 0; i < L1;)
	{
		if (i <= L1 - L2 && text.substr(i, L2) == find)
		{
			newText += replacement;
			i += L2;
		}
		else
		{
			newText += text[i];
			i += 1;
		}
	}
	return newText;
}

int main() {

	std::string text = ""I like cats. I have one cat."";
	std::string find = ""cat"";
	std::string replacement = ""dog"";
	std::string newText = replaceAll(text, find, replacement);

	std::cout << ""Before: "" << text << ""\n"";
	std::cout << ""After:  "" << newText << ""\n"";

	char end; std::cin >> end;
	return 0;

}
		","
Before: I like cats. I have one cat.
After:  I like dogs. I have one dog.
		",سنحصل على النتيجة التالية عند التشغيل.,"مثال: باستخدام الدالة ReplaceAll() يمكننا تبديل كل كلمة ""cat"" موجودة في النص ""I like cats. I have one cat."" بالكلمة ""dog"" و عندها سترجع لنا النص ""I like dogs. I have one dog."".","['الشروط', 'أنواع البيانات', 'الأساسيات', 'التعامل مع النصوص', 'المصفوفات', 'الدوال']",70.25495750708215,53.87747875354108,60.20762220707456,"[35.25072555417337, 48.704554158510305, 48.704554158510305, 50.83843817158895, 39.116826449977225, 42.2914296245804]"
64,التعامل مع المصفوفات,"أكتب برنامج يعرّف مصفوفة إسمها matrix تتألف من 3 أسطر و 3 أعمدة.
    بعدها يطلب من المستخدم إدخال عدد صحيح لكل عنصر فيها.
    في الأخير, يعرض للمستخدم ناتج جمع قيم العناصر الموجودة في كل سطر فيها.",,"
#include <iostream>

int main() {

	const int rows = 3;
	const int cols = 3;
	int matrix[rows][cols];
	int s;

	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{
			std::cout << ""Enter matrix["" << i << ""]["" << j << ""]: "";
			std::cin >> matrix[i][j];
		}
	}

	for (int i = 0; i < rows; i++)
	{
		s = 0;
		for (int j = 0; j < cols; j++)
		{
			s += matrix[i][j];
		}
		std::cout << ""\nThe sum of all elements in row "" << i << "": "" << s;
	}

	std::cout << ""\n"";

	char end; std::cin >> end;
	return 0;

}
		","
			Enter matrix[0][0]: 1
			Enter matrix[0][1]: 2
			Enter matrix[0][2]: 3
			Enter matrix[1][0]: 4
			Enter matrix[1][1]: 5
			Enter matrix[1][2]: 6
			Enter matrix[2][0]: 7
			Enter matrix[2][1]: 8
			Enter matrix[2][2]: 9
			The sum of all elements in row 0: 6
			The sum of all elements in row 1: 15
			The sum of all elements in row 2: 24
		",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات', 'المصفوفات']",70.94469762285995,47.972348811429974,60.40389338352601,"[46.41200339061572, 49.21740517705901, 49.21740517705901, 40.76955176276263]"
65,التعامل مع المصفوفات,"أكتب برنامج يعرّف مصفوفة إسمها matrix تتألف من 3 أسطر و 3 أعمدة.
    بعدها يطلب من المستخدم إدخال عدد صحيح لكل عنصر فيها.
    في الأخير, يعرض للمستخدم ناتج جمع قيم العناصر الموجودة في كل عامود فيها.",,"
#include <iostream>

int main() {

	const int rows = 3;
	const int cols = 3;
	int matrix[rows][cols];
	int s;

	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{
			std::cout << ""Enter matrix["" << i << ""]["" << j << ""]: "";
			std::cin >> matrix[i][j];
		}
	}

	for (int j = 0; j < cols; j++)
	{
		s = 0;
		for (int i = 0; i < rows; i++)
		{
			s += matrix[i][j];
		}
		std::cout << ""\nThe sum of all elements in column "" << j << "": "" << s;
	}

	std::cout << ""\n"";

	char end; std::cin >> end;
	return 0;

}
		","
			Enter matrix[0][0]: 1
			Enter matrix[0][1]: 2
			Enter matrix[0][2]: 3
			Enter matrix[1][0]: 4
			Enter matrix[1][1]: 5
			Enter matrix[1][2]: 6
			Enter matrix[2][0]: 7
			Enter matrix[2][1]: 8
			Enter matrix[2][2]: 9
			The sum of all elements in column 0: 12
			The sum of all elements in column 1: 15
			The sum of all elements in column 2: 18
		",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات', 'المصفوفات']",70.94469762285995,47.972348811429974,60.60209573151441,"[46.96468884481137, 49.73089991945335, 49.73089991945335, 42.42292079939369]"
66,التعامل مع المصفوفات,"قم بتعريف دالة إسمها CompareArrays, عند استدعائها نمرر لها مصفوفتين أحاديتين (عندهم بعد واحد) يحتويان على أعداد صحيحة فتقوم بمقارنتهما و من ثم طباعة ما إن كانتا متطابقتين من حيث عدد العناصر و قيمهم أم لا.
	بعدها قم بإنشاء مصفوفتين أو أكثر في البرنامج و تجربة استدعاء الدالة لمعرفة ما إن كان يوجد بينهم تطابق أم لا.",,"
#include <iostream>

// compareArrays() هنا قمنا بتعريف الدالة
void compareArrays(int arr1[], int arr1Length, int arr2[], int arr2Length) {
	if (arr1Length == arr2Length)
	{
		std::cout << ""They have the same length"";
	}
	else
	{
		std::cout << ""They have different length\n"";
		return;
	}

	for (int i = 0; i < arr1Length; i++)
	{
		if (arr1[i] != arr2[i])
		{
			std::cout << "" but their values are not equals\n"";
			return;
		}
	}

	std::cout << "" and their values are equal\n"";
}

// compareArrays() هنا قمنا بإنشاء 4 مصفوفات أحادية و من مقارنتهم بواسطة الدالة
int main() {

	int arr1[] = { 1, 2, 3, 4, 5 };
	int arr2[] = { 1, 2, 3, 4, 5 };
	int arr3[] = { 1, 2, 3, 6, 8 };
	int arr4[] = { 1, 2, 3, 4 };

	int arr1Length = sizeof(arr1) / sizeof(arr1[0]);
	int arr2Length = sizeof(arr2) / sizeof(arr2[0]);
	int arr3Length = sizeof(arr3) / sizeof(arr3[0]);
	int arr4Length = sizeof(arr4) / sizeof(arr4[0]);

	std::cout << ""Compare arr1 & arr2 => "";
	compareArrays(arr1, arr1Length, arr2, arr2Length);

	std::cout << ""Compare arr2 & arr3 => "";
	compareArrays(arr2, arr2Length, arr3, arr3Length);

	std::cout << ""Compare arr3 & arr4 => "";
	compareArrays(arr3, arr3Length, arr4, arr4Length);

	char end; std::cin >> end;
	return 0;

}
		","
Compare arr1 & arr2 => They have the same length and their values are equal
Compare arr2 & arr3 => They have the same length but their values are not equals
Compare arr3 & arr4 => They have different length
		",سنحصل على النتيجة التالية عند التشغيل في حال كانت المصفوفات تحتوي على نفس القيم المجهزة فيها.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'المصفوفات', 'الدوال']",71.01038715769593,61.755193578847965,60.79429194774558,"[47.51537225508794, 36.106348140997696, 50.242392617928616, 50.242392617928616, 44.074287792105665, 44.507188225006104]"
67,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات و حاول كتابة أصغر كود ممكن.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون مزدوجاً أو قيمته تساوي صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-7/ex-3-solution-using-cpp/fcb73034-617a-4156-ab9a-f2d03b7b2819_ex-3.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter an odd number as the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0 || n % 2 == 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if ((j == 1 || j == n || i == n / 2 || i == n / 2 + 2 || j == i || j == n - i + 1)
				&& i != n / 2 + 1 && j != n / 2 + 1)
			{
				std::cout << ""*"";
			}
			else
			{
				std::cout << "" "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter an odd number as the number of lines: 11
*         *
**       **
* *     * *
*  *   *  *
***** *****
           
***** *****
*  *   *  *
* *     * *
**       **
*         *
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 11 عند التشغيل.,"للتأكد من النتيجة بشكل دقيق, قم بعد عدد النجوم و المسافات الفارغة الموجودة في كل سطر.","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.31255901794147,46.906279508970734,60.981487379274476,"[48.064388737130415, 36.828812624774656, 50.75221838816979, 50.75221838816979]"
68,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون مزدوجاً أو قيمته تساوي صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-5/ex-1-solution-using-cpp/81812f16-9a79-4c18-a651-19cbd4ecbf96_ex-1.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter an odd number as the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0 || n % 2 == 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if ((i <= n / 2 && j <= n / 2) || (i > n / 2 + 1 && j > n / 2 + 1))
			{
				std::cout << "" "";
			}
			else
			{
				std::cout << ""*"";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter an odd number as the number of lines: 9
    *****
    *****
    *****
    *****
*********
*****    
*****    
*****    
*****    
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 9 عند التشغيل.,"للتأكد من النتيجة بشكل دقيق, قم بعد عدد النجوم و المسافات الفارغة الموجودة في كل سطر.","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.31255901794147,45.656279508970734,61.16651475905379,"[48.61268253525637, 37.550554424635095, 51.26132147449444, 51.26132147449444]"
69,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات و حاول كتابة أصغر كود ممكن.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون مزدوجاً أو قيمته تساوي صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-6/ex-2-solution-using-cpp/d0aa80f8-3b3a-4de4-8e5f-b957193c314c_ex-2.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter an odd number as the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0 || n % 2 == 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if ((i <= n / 2 + 1 && j >= i && j <= n - i + 1) || (i > n / 2 - 1 && j <= i && j > n - i))
			{
				std::cout << ""*"";
			}
			else
			{
				std::cout << "" "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter an odd number as the number of lines: 9
*********
 ******* 
  *****  
   ***   
    *    
   ***   
  *****  
 ******* 
*********
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 9 عند التشغيل.,"للتأكد من النتيجة بشكل دقيق, قم بعد عدد النجوم و المسافات الفارغة الموجودة في كل سطر.","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.31255901794147,45.656279508970734,61.34617902637574,"[49.15918862922986, 38.27050852034307, 51.76863685666663, 51.76863685666663]"
70,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات و حاول كتابة أصغر كود ممكن.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-6/ex-5-solution-using-cpp/5b32a802-cd2f-4279-8336-aabbff1e8073_ex-5.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter an odd number as the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0 || n % 2 == 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if (i == n / 2 + 1 || j == n / 2 + 1)
			{
				std::cout << "" "";
			}
			else
			{
				std::cout << ""*"";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter an odd number as the number of lines: 9
**** ****
**** ****
**** ****
**** ****
         
**** ****
**** ****
**** ****
**** ****
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 9 عند التشغيل.,"للتأكد من النتيجة بشكل دقيق, قم بعد عدد النجوم و المسافات الفارغة الموجودة في كل سطر.","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.31255901794147,45.656279508970734,61.52071002891705,"[49.70398363494316, 38.98875152779083, 52.27424115057861, 52.27424115057861]"
71,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات و حاول كتابة أصغر كود ممكن.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون مزدوجاً أو قيمته تساوي صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-7/ex-1-solution-using-cpp/c4b16526-654e-4b0d-8810-cd0ee109fc8d_ex-1.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter an odd number as the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0 || n % 2 == 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if (j == 1 || j == n || i == j || j == n - i + 1)
			{
				std::cout << ""*"";
			}
			else
			{
				std::cout << "" "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter an odd number as the number of lines: 11
*         *
**       **
* *     * *
*  *   *  *
*   * *   *
*    *    *
*   * *   *
*  *   *  *
* *     * *
**       **
*         *
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 11 عند التشغيل.,"للتأكد من النتيجة بشكل دقيق, قم بعد عدد النجوم و المسافات الفارغة الموجودة في كل سطر.","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.31255901794147,45.656279508970734,61.69032466518959,"[50.24713985190018, 39.70535574648234, 52.77820665573434, 52.77820665573434]"
72,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات و حاول كتابة أصغر كود ممكن.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون مزدوجاً أو قيمته تساوي صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-7/ex-2-solution-using-cpp/e679c509-ffea-4837-ae59-b317d38cbd1f_ex-2.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter an odd number as the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0 || n % 2 == 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if (i == 1 || i == n || i == j || j == n - i + 1)
			{
				std::cout << ""*"";
			}
			else
			{
				std::cout << "" "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter an odd number as the number of lines: 11
***********
 *       * 
  *     *  
   *   *   
    * *    
     *     
    * *    
   *   *   
  *     *  
 *       * 
***********
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 11 عند التشغيل.,"للتأكد من النتيجة بشكل دقيق, قم بعد عدد النجوم و المسافات الفارغة الموجودة في كل سطر.","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.31255901794147,45.656279508970734,61.855227783787896,"[50.788725562965794, 40.42038945928243, 53.28060165499865, 53.28060165499865]"
73,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات و حاول كتابة أصغر كود ممكن.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون مزدوجاً أو قيمته تساوي صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-6/ex-1-solution-using-cpp/f2d535d1-a5f2-4671-9690-876cdbe778a2_ex-1.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter an odd number as the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0 || n % 2 == 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if ((i <= n / 2 && j > i && j <= n - i) || (i > n / 2 && j < i && j > n - i + 1))
			{
				std::cout << "" "";
			}
			else
			{
				std::cout << ""*"";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter an odd number as the number of lines: 9
*       *
**     **
***   ***
**** ****
*********
**** ****
***   ***
**     **
*       *
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 9 عند التشغيل.,"للتأكد من النتيجة بشكل دقيق, قم بعد عدد النجوم و المسافات الفارغة الموجودة في كل سطر.","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.31255901794147,45.656279508970734,62.01561300872597,"[51.328805309478, 41.133917207529116, 53.78149068970956, 53.78149068970956]"
74,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات و حاول كتابة أصغر كود ممكن.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون مزدوجاً أو قيمته تساوي صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-7/ex-4-solution-using-cpp/f49daf6d-a396-4442-99af-87ce4bb59e9e_ex-4.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter an odd number as the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0 || n % 2 == 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if ((i == 1 || i == n || j == n / 2 || j == n / 2 + 2 || j == i || j == n - i + 1)
				&& i != n / 2 + 1 && j != n / 2 + 1)
			{
				std::cout << ""*"";
			}
			else
			{
				std::cout << "" "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter an odd number as the number of lines: 11
***** *****
 *  * *  * 
  * * * *  
   ** **   
    * *    
           
    * *    
   ** **   
  * * * *  
 *  * *  * 
***** *****
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 11 عند التشغيل.,"للتأكد من النتيجة بشكل دقيق, قم بعد عدد النجوم و المسافات الفارغة الموجودة في كل سطر.","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.31255901794147,46.906279508970734,62.171663497854915,"[51.86744014405382, 41.846000043839425, 54.28093481248408, 54.28093481248408]"
75,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات و حاول كتابة أصغر كود ممكن.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-7/ex-5-solution-using-cpp/bd40119b-a5b2-4f21-b2f2-89af229441f9_ex-5.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter an odd number as the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0 || n % 2 == 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if ((i == 1 || i == n / 2 || i == n / 2 + 2 || i == n ||
				 j == 1 || j == n / 2 || j == n / 2 + 2 || j == n)
				&& j != n / 2 + 1 && i != n / 2 + 1)
			{
				std::cout << ""*"";
			}
			else
			{
				std::cout << "" "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter an odd number as the number of lines: 11
***** *****
*   * *   *
*   * *   *
*   * *   *
***** *****
           
***** *****
*   * *   *
*   * *   *
*   * *   *
***** *****
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 11 عند التشغيل.,"للتأكد من النتيجة بشكل دقيق, قم بعد عدد النجوم و المسافات الفارغة الموجودة في كل سطر.","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.31255901794147,48.156279508970734,62.32355264060709,"[52.40468786317073, 42.556695764690815, 54.77899181979968, 54.77899181979968]"
76,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أكبر من صفر يمثل عدد أسطر الشكل الذي سيتم رسمه.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-8/ex-3-solution-using-cpp/58e8a4df-2899-4311-9751-962b04b53185_ex-3.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if (i % 2 == 1)
			{
				std::cout << ""1 "";
			}
			else
			{
				std::cout << ""0 "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 7
1 1 1 1 1 1 1 
0 0 0 0 0 0 0 
1 1 1 1 1 1 1 
0 0 0 0 0 0 0 
1 1 1 1 1 1 1 
0 0 0 0 0 0 0 
1 1 1 1 1 1 1 
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 7 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.31255901794147,45.656279508970734,62.471444700655255,"[52.9406032213863, 43.26605912464086, 55.27571646621394, 55.27571646621394]"
77,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أكبر من صفر يمثل عدد أسطر الشكل الذي سيتم رسمه.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-8/ex-4-solution-using-cpp/785fbab7-d4be-44e2-a361-b8b26f4e4a03_ex-4.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if (j % 2 == 1)
			{
				std::cout << ""1 "";
			}
			else
			{
				std::cout << ""0 "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 7
1 0 1 0 1 0 1 
1 0 1 0 1 0 1 
1 0 1 0 1 0 1 
1 0 1 0 1 0 1 
1 0 1 0 1 0 1 
1 0 1 0 1 0 1 
1 0 1 0 1 0 1 
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 7 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.31255901794147,45.656279508970734,62.61549540849438,"[53.47523812886552, 43.97414203385456, 55.77116066189186, 55.77116066189186]"
78,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات و حاول كتابة أصغر كود ممكن.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون مزدوجاً أو قيمته تساوي صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-6/ex-3-solution-using-cpp/f65fad26-eb75-45cd-817e-adec78cd9984_ex-3.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter an odd number as the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0 || n % 2 == 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if ((i <= n / 2 && j > i && j <= n - i) || (i > n / 2 && j < i && j > n - i + 1) || i == n / 2 + 1)
			{
				std::cout << "" "";
			}
			else
			{
				std::cout << ""*"";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter an odd number as the number of lines: 9
*       *
**     **
***   ***
**** ****
         
**** ****
***   ***
**     **
*       *
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 9 عند التشغيل.,"للتأكد من النتيجة بشكل دقيق, قم بعد عدد النجوم و المسافات الفارغة الموجودة في كل سطر.","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.31255901794147,45.656279508970734,62.755852508440185,"[54.00864183371364, 44.68099374043715, 56.26537365493867, 56.26537365493867]"
79,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أكبر من صفر حتى يتم رسم الشكل المطلوب بناءاً عليه.
ملاحظة: هنا افترضنا أن المستخدم قام بإدخال الرقم 3 عند التشغيل.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-9/ex-1-solution-using-cpp/6dfd60f6-e7ea-478f-9be6-705bfce151db_ex-1.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n * 2; i++)
	{
		for (int j = 1; j <= n * 2; j++)
		{
			if (i <= n * 2 / 2)
			{
				std::cout << i << "" "";
			}
			else
			{
				std::cout << n * 2 - i + 1 << "" "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 3
1 1 1 1 1 1 
2 2 2 2 2 2 
3 3 3 3 3 3 
3 3 3 3 3 3 
2 2 2 2 2 2 
1 1 1 1 1 1 
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 3 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.31255901794147,45.656279508970734,62.89265626408358,"[54.54086109046095, 45.38666099891894, 56.758402199884685, 56.758402199884685]"
80,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أكبر من صفر يمثل عدد أسطر الشكل الذي سيتم رسمه.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-8/ex-5-solution-using-cpp/b47a4e4b-0e6c-4c72-bbbc-74d0d3cfca33_ex-5.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if (i % 2 == 1 && j % 2 == 1 || i % 2 == 0 && j % 2 == 0)
			{
				std::cout << ""0 "";
			}
			else
			{
				std::cout << ""1 "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 7
0 1 0 1 0 1 0 
1 0 1 0 1 0 1 
0 1 0 1 0 1 0 
1 0 1 0 1 0 1 
0 1 0 1 0 1 0 
1 0 1 0 1 0 1 
0 1 0 1 0 1 0 
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 7 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.31255901794147,45.656279508970734,63.02603992583588,"[55.07194031591123, 46.091188226103704, 57.25029071353366, 57.25029071353366]"
81,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أكبر من صفر يمثل عدد أسطر الشكل الذي سيتم رسمه.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-9/ex-5-solution-using-cpp/3527d8ea-6cf4-42b1-b489-637716b098ae_ex-5.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if (j <= i)
			{
				std::cout << j << "" "";
			}
			else
			{
				std::cout << i << "" "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 6
1 1 1 1 1 1 
1 2 2 2 2 2 
1 2 3 3 3 3 
1 2 3 4 4 4 
1 2 3 4 5 5 
1 2 3 4 5 6 
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 6 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.31255901794147,45.656279508970734,63.15613016384121,"[55.60192173344585, 46.79461764537281, 57.741081419266976, 57.741081419266976]"
82,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أكبر من صفر حتى يتم رسم الشكل المطلوب بناءاً عليه.
ملاحظة: هنا افترضنا أن المستخدم قام بإدخال الرقم 3 عند التشغيل.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-9/ex-2-solution-using-cpp/45388d94-52ff-46ef-99ec-3a8d8ba21e62_ex-2.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n * 2; i++)
	{
		for (int j = 1; j <= n * 2; j++)
		{
			if (j <= n * 2 / 2)
			{
				std::cout << j << "" "";
			}
			else
			{
				std::cout << n * 2 - j + 1 << "" "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 3
1 2 3 3 2 1 
1 2 3 3 2 1 
1 2 3 3 2 1 
1 2 3 3 2 1 
1 2 3 3 2 1 
1 2 3 3 2 1 
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 3 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.31255901794147,45.656279508970734,63.28304746921226,"[56.13084550676905, 47.49698942043049, 58.23081448078887, 58.23081448078887]"
83,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد بين 1 و 9 يمثل عدد أسطر الشكل الذي سيتم رسمه.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-10/ex-5-solution-using-cpp/bb8a1130-60b5-4777-8d92-1ef4cc216b1b_ex-5.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n < 1 || n > 9);

	for (int i = 1; i <= n; i++)
	{
		for (int j = n; j >= i; j--)
		{
			if (i == 1 || j == n || j == i)
			{
				std::cout << j << "" "";
			}
			else
			{
				std::cout << ""  "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 6
6 5 4 3 2 1 
6       2 
6     3 
6   4 
6 5 
6 
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 6 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.31255901794147,45.656279508970734,63.40690652626113,"[56.65874986398485, 48.19834177938077, 58.71952812620337, 58.71952812620337]"
84,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون مزدوجاً أو قيمته تساوي صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-5/ex-2-solution-using-cpp/7931bf20-81f0-4f15-8422-c66e8d36ba73_ex-2.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter an odd number as the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0 || n % 2 == 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if ((i <= n / 2 + 1 && j <= n / 2 + 1) || (i > n / 2 && j > n / 2))
			{
				std::cout << ""*"";
			}
			else
			{
				std::cout << "" "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter an odd number as the number of lines: 9
*****
*****
*****
*****
*********
    *****
    *****
    *****
    *****
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 9 عند التشغيل.,"للتأكد من النتيجة بشكل دقيق, قم بعد عدد النجوم و المسافات الفارغة الموجودة في كل سطر.","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.31255901794147,45.656279508970734,63.52781655814216,"[57.18567121281137, 48.89871112994177, 59.207258763228594, 59.207258763228594]"
85,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات و حاول كتابة أصغر كود ممكن.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون مزدوجاً أو قيمته تساوي صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-6/ex-4-solution-using-cpp/0aad6bf3-51e1-4d0a-8176-e4ff147956ee_ex-4.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter an odd number as the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0 || n % 2 == 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if (((i <= n / 2 + 1 && j >= i && j <= n - i + 1) || (i > n / 2 - 1 && j <= i && j > n - i)) && j != n / 2 + 1)
			{
				std::cout << ""*"";
			}
			else
			{
				std::cout << "" "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter an odd number as the number of lines: 9
**** ****
 *** *** 
  ** **  
   * *   
         
   * *   
  ** **  
 *** *** 
**** ****
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 9 عند التشغيل.,"للتأكد من النتيجة بشكل دقيق, قم بعد عدد النجوم و المسافات الفارغة الموجودة في كل سطر.","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.31255901794147,45.656279508970734,63.645881648096584,"[57.71164424766236, 49.598132166527236, 59.694041086278276, 59.694041086278276]"
86,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد بين 1 و 9 حتى يتم رسم الشكل المطلوب بناءً عليه.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-10/ex-2-solution-using-cpp/5a17ff33-7b39-4e89-bff4-1bc5b878dcb7_ex-2.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n < 1 || n > 9);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if (j == 1 || j == i || i == n)
			{
				std::cout << n - j + 1 << "" "";
			}
			else
			{
				std::cout << ""  "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 6
6 
6 5 
6   4 
6     3 
6       2 
6 5 4 3 2 1 
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 6 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.31255901794147,45.656279508970734,63.76120103828461,"[58.23670204925788, 50.296637969857244, 60.179908176072495, 60.179908176072495]"
87,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد بين 1 و 9 حتى يتم رسم الشكل المطلوب بناءً عليه.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-10/ex-1-solution-using-cpp/6a7c38c3-bf05-4357-91b9-3647361a28cb_ex-1.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n < 1 || n > 9);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if (j == 1 || j == i || i == n)
			{
				std::cout << j << "" "";
			}
			else
			{
				std::cout << ""  "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 6
1 
1 2 
1   3 
1     4 
1       5 
1 2 3 4 5 6 
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 6 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.31255901794147,45.656279508970734,63.87386940800855,"[58.760876177365375, 50.99426009969922, 60.66489159237869, 60.66489159237869]"
88,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-4/ex-1-solution-using-cpp/8fbcd1a0-ac30-4094-ac57-198d1bbbae30_ex-1.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if (i == j)
			{
				std::cout << "" "";
			}
			else
			{
				std::cout << ""*"";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 9
 ********
* *******
** ******
*** *****
**** ****
***** ***
****** **
******* *
******** 
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 9 عند التشغيل.,"الشكل الذي يظهر لك في النتيجة النهائية عبارة عن مربع لأن عدد النجوم التي تظهر عامودياً يساوي عدد النجوم التي تظهر أفقياً, لكنه لا يظهر لك كذلك بسبب الهامش الإفتراضي الذي يقوم الحاسوب بوضعه بين الأسطر.","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.31255901794147,45.656279508970734,63.983977132966054,"[59.28419675721739, 51.691028681285715, 61.149021460429395, 61.149021460429395]"
89,التعامل مع الأرقام و النصوص,"قم بتعريف دالة إسمها RemoveAll, عند استدعاءها نمرر لها نصيّن, فترجع نسخة من النص لا تحتوي على النص الثاني.
	بعدها قم بتجربة هذه الدالة في البرنامج.",,"
#include <iostream>
#include <string>

std::string removeAll(std::string s1, std::string s2) {

	int L1 = s1.length();
	int L2 = s2.length();
	std::string newS = """";

	for (int i = 0; i < L1;)
	{
		if (i <= L1 - L2 && s1.substr(i, L2) == s2)
		{
			i += L2;
		}
		else
		{
			newS += s1[i];
			i += 1;
		}

	}

	return newS;
}

int main() {

	std::string text = ""I like cats. I have one cat."";
	std::string keyword = ""cat"";
	std::string newText = removeAll(text, keyword);

	std::cout << ""Before: "" << text << ""\n"";
	std::cout << ""After:  "" << newText << ""\n"";

	char end; std::cin >> end;
	return 0;

}
		","
Before: I like cats. I have one cat.
After:  I like s. I have one .
		",سنحصل على النتيجة التالية عند التشغيل.,"مثال: إذا قمنا باستخدام الدالة RemoveAll() و تمرير النص ""I like cats. I have one cat."" و الكلمة ""cat"" لها فإنها سترجع النص ""I like s. I have one ."".","['الشروط', 'أنواع البيانات', 'الأساسيات', 'التعامل مع النصوص', 'المصفوفات', 'الدوال']",71.69714138552663,52.09857069276332,64.09161052702562,"[52.38697248590623, 61.632326551514126, 61.632326551514126, 57.2613060731111, 46.7606955725006, 47.626496438301466]"
90,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون مزدوجاً أو قيمته تساوي صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-3/ex-2-solution-using-cpp/14ea2b57-f1d9-4e8c-b1c1-c6d559354c5e_ex-2.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		if (i <= n / 2)
		{
			for (int k = 1; k < (n / 2) - i + 2; k++)
			{
				std::cout << "" "";
			}

			std::cout << ""*"";

			for (int j = 1; j < (i * 2) - 2; j++)
			{
				std::cout << "" "";
			}

			if (i != 1)
			{
				std::cout << ""*"";
			}
		}
		else
		{
			for (int k = 1; k < i - (n / 2); k++)
			{
				std::cout << "" "";
			}

			std::cout << ""*"";

			for (int j = 1; j < (n * 2) - (i * 2); j++)
			{
				std::cout << "" "";
			}

			if (i != n)
			{
				std::cout << ""*"";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 9
    *
   * *
  *   *
 *     *
*       *
 *     *
  *   *
   * *
    *
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 9 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",71.89606329979486,59.69803164989743,64.2000616505275,"[59.84284293460405, 53.083188867007514, 62.11590421907963, 62.11590421907963]"
91,التعامل مع الأرقام و النصوص,"قم بإنشاء برنامج يطلب من المستخدم إدخال نصّين, بعدها يقوم بطباعة ما إن كان النص الأول يبدأ بالنص الثاني أم لا.",,"
#include <iostream>
#include <string>
#include <stdbool.h>

int main() {

	std::string text1, text2;
	bool found = true;

	std::cout << ""Enter text 1: "";
	getline(std::cin, text1);

	std::cout << ""Enter text 2: "";
	getline(std::cin, text2);

	for (int i = 0; i < text2.length() && found == true; i++)
	{
		if (text1[i] != text2[i])
		{
			found = false;
		}
	}

	std::cout << ""--------------------------------\n"";

	if (found)
	{
		std::cout << ""Text 1 start with '"" << text2 << ""'"";
	}
	else
	{
		std::cout << ""Text 1 is not start with '"" << text2 << ""'"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter text 1: I like programming.
Enter text 2: Hello
--------------------------------
Text 1 is not start with 'Hello'
		",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,"مثال

Enter text 1: I like programming.
Enter text 2: Hello
--------------------------------
Text 1 is not start with 'Hello'
	","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'التعامل مع النصوص', 'المصفوفات']",72.01762669184765,51.008813345923826,64.30777111863182,"[60.365364095505, 53.77915802964294, 62.59923466817928, 62.59923466817928, 62.461564731851624, 48.42005069033759]"
92,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-4/ex-2-solution-using-cpp/89835544-7088-4f66-a80f-bdd227d9cea5_ex-2.PNG,"
#include <iostream>

int main() {

	int n;
	double s = 0;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		if (i % 2 == 1)
		{
			s += (double) 1 / i;
		}
		else
		{
			s -= (double) 1 / i;
		}
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = 0.583333
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",72.5212464589235,46.26062322946175,64.41413154495612,"[60.887435575812624, 54.47467751168504, 63.08211543668559, 63.08211543668559]"
93,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-7/ex-3-solution-using-cpp/e8679a59-69ca-49cf-8954-f4079954e973_ex-3.PNG,"
#include <iostream>

int main() {

	int f = 1;
	int n = 0;
	double s = 0;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		f *= i;

		if (i % 2 == 1)
		{
			s += i;
		}
		else
		{
			s += (double) 1 / f;
		}
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = 4.54167
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",72.5212464589235,48.76062322946175,64.5222720937266,"[61.41010043026897, 55.17079036787585, 63.565589579340624, 63.565589579340624]"
94,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-4/ex-4-solution-using-cpp/349b1a02-d15c-4fec-8709-9bbf5d317001_ex-4.PNG,"
#include <iostream>

int main() {

	int n;
	double s = 0;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		if (i % 2 == 1)
		{
			s += (double) (i * 2) / (i + 1);
		}
		else
		{
			s -= (double) (i * 2) / (i + 1);
		}
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = -0.433333
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",72.5212464589235,46.26062322946175,64.62811177975729,"[61.931998330478706, 55.86613626982009, 64.04829676774906, 64.04829676774906]"
95,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-4/ex-5-solution-using-cpp/54ddd6aa-9c9e-426a-8f0d-4c311ebef5c9_ex-5.PNG,"
#include <iostream>

int main() {

	int n;
	double s = 0;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		if (i % 2 == 1)
		{
			s += (double) (i * (i + 1)) / (i + 1);
		}
		else
		{
			s -= (double) (i * (i + 1)) / (i + 1);
		}
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = -2
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",72.5212464589235,46.26062322946175,64.73172326187154,"[62.45315349604963, 56.56073943712549, 64.53026122151869, 64.53026122151869]"
96,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون مزدوجاً أو قيمته تساوي صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-3/ex-3-solution-using-cpp/7daab33f-8756-4a6b-a8c5-6c2e62330c4b_ex-3.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		if (i <= n / 2)
		{
			for (int k = 1; k < (n / 2) - i + 2; k++)
			{
				std::cout << ""-"";
			}

			std::cout << ""*"";

			for (int j = 1; j < (i * 2) - 2; j++)
			{
				std::cout << "" "";
			}

			if (i != 1)
			{
				std::cout << ""*"";
			}

			for (int k = 1; k < (n / 2) - i + 2; k++)
			{
				std::cout << ""-"";
			}
		}
		else
		{
			for (int k = 1; k < i - (n / 2); k++)
			{
				std::cout << ""-"";
			}

			std::cout << ""*"";

			for (int j = 1; j < (n * 2) - (i * 2); j++)
			{
				std::cout << "" "";
			}

			if (i != n)
			{
				std::cout << ""*"";
			}

			for (int k = 1; k < i - (n / 2); k++)
			{
				std::cout << ""-"";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 9
----*----
---* *---
--*   *--
-*     *-
*       *
-*     *-
--*   *--
---* *---
----*----
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 9 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",72.5212464589235,65.01062322946174,64.83317617144174,"[62.97358913743922, 57.25462308024956, 65.01150615110697, 65.01150615110697]"
97,التعامل مع المصفوفات,"أكتب برنامج يعرّف مصفوفة إسمها matrix تتألف من 3 أسطر و 3 أعمدة.
    بعدها يطلب من المستخدم إدخال عدد صحيح لكل عنصر فيها.
	بعدها يعرض للمستخدم جميع القيم التي أصبحت تحتويها بشكل مرتب.
	بعدها يقوم بتخزين جميع القيم الموجودة في المصفوفة matrix بداخل مصفوفة أحادية ( ذات بعد واحد )  إسمها array.
    في الأخير, يعرض للمستخدم جميع القيم التي أصبحت تحتويهم المصفوفة array على سطر واحد مع وضع مسافة فارغة بين كل قيمتين.",,"
#include <iostream>

int main() {

	const int rows = 3;
	const int cols = 3;
	int matrix[rows][cols];
	int array[rows * cols];

	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{
			std::cout << ""Enter matrix["" << i << ""]["" << j << ""]: "";
			std::cin >> matrix[i][j];
		}
	}

	std::cout << ""\nMatrix values\n"";

	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{
			std::cout << matrix[i][j] << "" "";
		}
		std::cout << ""\n"";
	}

	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{
			array[j + (i * cols)] = matrix[i][j];
		}
	}

	std::cout << ""\nArrays values\n"";

	for (int i = 0; i < rows * cols; i++)
	{
		std::cout << array[i] << "" "";
	}

	std::cout << ""\n"";

	char end; std::cin >> end;
	return 0;

}
		","
			Enter matrix[0][0]: 1
			Enter matrix[0][1]: 2
			Enter matrix[0][2]: 3
			Enter matrix[1][0]: 4
			Enter matrix[1][1]: 5
			Enter matrix[1][2]: 6
			Enter matrix[2][0]: 7
			Enter matrix[2][1]: 8
			Enter matrix[2][2]: 9
			Matrix values
			1 2 3 
			4 5 6 
			7 8 9 
			Array values
			1 2 3 4 5 6 7 8 9 
		",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات', 'المصفوفات']",72.52124645892353,56.260623229461764,64.93253726844347,"[63.49332750797264, 65.49205380983909, 65.49205380983909, 50.215607660909725]"
98,التعامل مع المصفوفات,"أكتب برنامج يطلب من المستخدم إدخال أي رقم يريد للبحث عنه بداخل مصفوفة أرقام أحادية (ذات بعد واحد) جاهزة.
	بعدها سيقوم البرنامج بطباعة ما إن كانت القيمة موجودة في المصفوفة أم لا.",,"
#include <iostream>

int main() {
	
	int array[] = { 1, 2, 5, 3, 2, 4, 7, 2 };
	int arrayLength = (sizeof(array) / sizeof(*array));
	int x;
	bool isExist = false;

	std::cout << ""Enter a number: "";
	std::cin >> x;

	for (int i = 0; i < arrayLength; i++)
	{
		if (array[i] == x)
		{
			isExist = true;
			break;
		}
	}

	if (isExist)
	{
		std::cout << ""'"" << x << ""' is exists in the array"";
	}
	else
	{
		std::cout << ""'"" << x << ""' is not exist in the array"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 5
'5' is exists in the array
		",سنحصل على النتيجة التالية في حال كانت المصفوفة تحتوي على نفس القيم المجهزة فيها و تم إدخال نفس القيمة التي تم تعليمها باللون الأصفر عند التشغيل.,ملاحظة: بمجرد أن يتم إيجاد القيمة المراد البحث عنها فإنه يجب إيقاف البحث.,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'المصفوفات']",73.0544909181803,49.02724545909015,65.0298705879554,"[64.01238995267613, 57.98025389235477, 65.97192554274127, 65.97192554274127, 51.83535368804863]"
99,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-1/ex-1-solution-using-cpp/cde215fc-34c9-416c-8424-6daf0888d576_ex-1.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines:"";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= i; j++)
		{
			printf(""*"");
		}
		printf(""\n"");
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 5
*
**
***
****
*****
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 5  عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات']",73.42776203966007,42.96388101983003,65.12928327018814,"[64.53214551828655, 66.45249039655042, 66.45249039655042]"
100,التعامل مع المصفوفات,"أكتب برنامج يقوم بتعريف ثلاث مصفوفات A و B و C.
	ثم يطلب من المستخدم إدخال عدد يمثل عدد عناصر المصفوفات الثلاثة.
ملاحظة: عدد عناصر المصفوفات يجب أن يكون أكبر من صفر.
	بعدها يطلب من المستخدم إدخال قيم لجميع عناصر المصفوفتين A و B و يجمعهم في المصفوفة C.
	في الأخير, يعرض للمستخدم القيم التي أصبحت تحتويها المصفوفة C على سطر واحد مع وضع مسافة فارغة بين كل قيمتين.",,"
#include <iostream>

int main() {
	
	int n;
	int *A, *B, *C;

	do {
		std::cout << ""Enter the length of the 3 arrays: "" ;
		std::cin >> n;
	}
	while (n <= 0);

	A = new int[n];
	B = new int[n];
	C = new int[n];

	for (int i = 0; i < n; i++)
	{
		std::cout << ""Enter A["" << i << ""]: "";
		std::cin >> A[i];
	}

	for (int i = 0; i < n; i++)
	{
		std::cout << ""Enter B["" << i << ""]: "";
		std::cin >> B[i];
	}

	for (int i = 0; i < n; i++)
	{
		C[i] = A[i] + B[i];
	}

	std::cout << ""\nC contains: "";
	for (int i = 0; i < n; i++)
	{
		std::cout << C[i] << "" "";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the length of the 3 arrays: 3
Enter A[0]: 1
Enter A[1]: 2
Enter A[2]: 3
Enter B[0]: 4
Enter B[1]: 5
Enter B[2]: 6
C contains: 5 7 9 
		",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات', 'المصفوفات']",73.62005322345266,56.81002661172633,65.22951136361495,"[65.05217288762833, 66.93332705409088, 66.93332705409088, 53.489202200570055]"
101,التعامل مع المصفوفات,"قم بتعريف دالة إسمها PrintLongestName, عند استدعاءها نمرر لها مصفوفة تحتوي على أسماء أشخاص فتقوم بطباعة الإسم الأطول و عدد أحرفه.
	بعدها قم بإنشاء مصفوفة أسماء في البرنامج و تجربة استدعاء الدالة لمعرفة ما هو الإسم الأطول الموجود في المصفوفة.",,"
#include <iostream>
#include <string>

// printLongestName() هنا قمنا بتعريف الدالة
void printLongestName(std::string arr[], int arrLength) {

	int longestWordLength = 0;
	int longestWordIndex = 0;

	for (int i = 0; i < arrLength; i++)
	{
		if (arr[i].length() > longestWordLength)
		{
			longestWordLength = arr[i].length();
			longestWordIndex = i;
		}
	}

	std::cout << ""The longest name is '"" << arr[longestWordIndex] << ""', which is contain "" << longestWordLength << "" characters "";
}

// printLongestName() هنا قمنا بإنشاء مصفوفة أرقام أحادية و تجربة الدالة
int main() {

	std::string names[] = { ""Mhamad"", ""Abdullah"", ""Rami"", ""Zeina"", ""Marwa"" };
	int arrLength = sizeof(names) / sizeof(names[0]);

	printLongestName(names, arrLength);

	char end; std::cin >> end;
	return 0;

}
		","
The longest name is 'Abdullah', which is contain 8 characters
		",سنحصل على النتيجة التالية عند التشغيل في حال كانت المصفوفة تحتوي على نفس القيم المجهزة فيها.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'المصفوفات', 'الدوال']",73.70365808597117,46.851829042985585,65.32918475438939,"[65.572015356086, 58.74009128776676, 67.41397881074724, 67.41397881074724, 55.109728251463125, 50.05922320095807]"
102,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-5/ex-3-solution-using-cpp/7d70cce9-0947-404b-91fc-25183d8ef49b_ex-3.PNG,"
#include <iostream>

int main() {

	int n = 0;
	int s = 0;
	int f = 1;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		f *= i;

		if (i % 2 == 1)
		{
			s += i;
		}
		else
		{
			s += f;
		}
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = 30
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",73.91588581390282,49.45794290695141,65.42751941379723,"[66.0914115807548, 59.432935514170026, 67.89418432361472, 67.89418432361472]"
103,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-5/ex-2-solution-using-cpp/ea9b5d90-d3a4-4cd6-91c9-6a6ab17bd093_ex-2.PNG,"
#include <iostream>

int main() {

	int n = 0;
	int s = 0;
	int f = 1;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		f *= i;

		if (i % 2 == 1)
		{
			s += f;
		}
		else
		{
			s -= f;
		}
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = -19
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",73.91588581390282,49.45794290695141,65.52549229043184,"[66.61068721116584, 60.125659146315556, 68.37426924222449, 68.37426924222449]"
104,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-5/ex-4-solution-using-cpp/e9db2b66-766c-4468-8ced-9a1b6fb8e28e_ex-4.PNG,"
#include <iostream>

int main() {

	int n = 0;
	int s = 0;
	int f = 1;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		f *= i;

		if (i % 2 == 1)
		{
			s -= i;
		}
		else
		{
			s += f;
		}
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = 22
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",73.91588581390282,49.45794290695141,65.621581073285,"[67.12933481031641, 60.8177547472006, 68.85372612957374, 68.85372612957374]"
105,التعامل مع المصفوفات,"أكتب برنامج يعرّف مصفوفة إسمها matrix تتألف من 3 أسطر و 3 أعمدة.
    بعدها يطلب من المستخدم إدخال عدد صحيح لكل عنصر فيها.
	في الأخير, يعرض للمستخدم ناتج جمع جميع قيم عناصرها.",,"
#include <iostream>

int main() {

	const int rows = 3;
	const int cols = 3;
	int matrix[rows][cols];
	int s = 0;

	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{
			std::cout << ""Enter matrix["" << i << ""]["" << j << ""]: "";
			std::cin >> matrix[i][j];
		}
	}

	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{
			s += matrix[i][j];
		}
	}

	std::cout << ""\nThe sum of all elements: "" << s << ""\n"";

	char end; std::cin >> end;
	return 0;

}
		","
			Enter matrix[0][0]: 1
			Enter matrix[0][1]: 2
			Enter matrix[0][2]: 3
			Enter matrix[1][0]: 4
			Enter matrix[1][1]: 5
			Enter matrix[1][2]: 6
			Enter matrix[2][0]: 7
			Enter matrix[2][1]: 8
			Enter matrix[2][2]: 9
			The sum of all elements: 45
		",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,,"['الحلقات', 'أنواع البيانات', 'الأساسيات', 'المصفوفات']",74.58150914241567,47.290754571207835,65.71583959360763,"[67.6473723219568, 69.33257292941283, 69.33257292941283, 56.825914785170795]"
106,التعامل مع المصفوفات,"أكتب برنامج يطلب من المستخدم إعطائه عدد يمثل عدد عناصر مصفوفة إسمها arr و يخزنه في متغير إسمه n.
ملاحظة: عدد عناصر المصفوفة يجب أن يكون أكبر من صفر.
	بعدها ينشئ المصفوفة arr و يحدد أن عدد عناصرها هو العدد الذي أدخله المستخدم.
	بعدها يطلب من المستخدم إدخال عدد صحيح لكل عنصر فيها.
	في الأخير يعرض للمستخدم عدد العناصر التي تملك قيم أكبر من صفر, و عدد العناصر التي تملك قيم أصغر من صفر, و عدد العناصر التي تملك قيم تساوي صفر.",,"
#include <iostream>

int main() {
	
	int n;
	int pCounter = 0;
	int nCounter = 0;
	int zCounter = 0;
	int * arr;

	do {
		std::cout <<(""Enter arr length: "");
		std::cin >> n;
	}
	while (n <= 0);

	arr = new int[n];

	for (int i = 0; i < n; i++)
	{
		std::cout << ""Enter arr["" << i << ""]: "";
		std::cin >> arr[i];
	}

	for (int i = 0; i < n; i++)
	{
		if (arr[i] > 0)
		{
			pCounter++;
		}
		else if (arr[i] < 0)
		{
			nCounter++;
		}
		else
		{
			zCounter++;
		}
	}

	std::cout << ""\nNumber of positive numbers: "" << pCounter;
	std::cout << ""\nNumber of negative numbers: "" << nCounter;
	std::cout << ""\nNumber of zeros: "" << zCounter;

	char end; std::cin >> end;
	return 0;

}
		","
Enter arr length: 6
Enter arr[0]: 2
Enter arr[1]: -2
Enter arr[2]: 0
Enter arr[3]: -1
Enter arr[4]: 4
Enter arr[5]: 9
Number of positive numbers: 3
Number of negative numbers: 2
Number of zeros: 1
		",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'المصفوفات', 'الدوال']",74.78753541076487,61.14376770538244,65.81303620052314,"[68.16638919579482, 61.541639129547306, 69.81239909144954, 69.81239909144954, 58.445615241444216, 52.240709036538014]"
107,التعامل مع المصفوفات,"أكتب برنامج يقوم بتعريف ثلاث مصفوفات A و B و C.
	ثم يطلب من المستخدم إدخال عدد يمثل عدد يمثل عدد عناصر المصفوفتين A و B.
ملاحظة: عدد عناصر المصفوفتين يجب أن يكون أكبر من صفر.
	بعدها يطلب من المستخدم إدخال قيم لجميع عناصر المصفوفتين A و B.
	بعدها يقوم بوضع قيم A و B بنفس الترتيب في المصفوفة C.
	في الأخير, يعرض للمستخدم القيم التي أصبحت تحتويها المصفوفة C.


الحل بلغة C++

#include <iostream>

int main() {
	
	int n;
	int *A, *B, *C;

	do {
		std::cout <<(""Enter the length of A and B: "");
		std::cin >> n;
	}
	while (n <= 0);

	A = new int[n];
	B = new int[n];
	C = new int[n * 2];

	for (int i = 0; i < n; i++)
	{
		std::cout << ""Enter A["" << i << ""]: "";
		std::cin >> A[i];
	}

	for (int i = 0; i < n; i++)
	{
		std::cout << ""Enter B["" << i << ""]: "";
		std::cin >> B[i];
	}

	for (int i = 0; i < n; i++)
	{
		C[i] = A[i];
	}

	for (int i = 0; i < n; i++)
	{
		C[n + i] = B[i];
	}

	std::cout << ""\nC contains: "";
	for (int i = 0; i < n * 2; i++)
	{
		std::cout << C[i] << "" "";
	}

	char end; std::cin >> end;
	return 0;

}
		

سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.

Enter the length of A and B: 3
Enter A[0]: 1
Enter A[1]: 2
Enter A[2]: 3
Enter B[0]: 4
Enter B[1]: 5
Enter B[2]: 6
C contains: 1 2 3 4 5 6 
		

",,"
#include <iostream>

int main() {
	
	int n;
	int *A, *B, *C;

	do {
		std::cout <<(""Enter the length of A and B: "");
		std::cin >> n;
	}
	while (n <= 0);

	A = new int[n];
	B = new int[n];
	C = new int[n * 2];

	for (int i = 0; i < n; i++)
	{
		std::cout << ""Enter A["" << i << ""]: "";
		std::cin >> A[i];
	}

	for (int i = 0; i < n; i++)
	{
		std::cout << ""Enter B["" << i << ""]: "";
		std::cin >> B[i];
	}

	for (int i = 0; i < n; i++)
	{
		C[i] = A[i];
	}

	for (int i = 0; i < n; i++)
	{
		C[n + i] = B[i];
	}

	std::cout << ""\nC contains: "";
	for (int i = 0; i < n * 2; i++)
	{
		std::cout << C[i] << "" "";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the length of A and B: 3
Enter A[0]: 1
Enter A[1]: 2
Enter A[2]: 3
Enter B[0]: 4
Enter B[1]: 5
Enter B[2]: 6
C contains: 1 2 3 4 5 6 
		",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,"أكتب برنامج يقوم بتعريف ثلاث مصفوفات A و B و C.
	ثم يطلب من المستخدم إدخال عدد يمثل عدد يمثل عدد عناصر المصفوفتين A و B.
ملاحظة: عدد عناصر المصفوفتين يجب أن يكون أكبر من صفر.
	بعدها يطلب من المستخدم إدخال قيم لجميع عناصر المصفوفتين A و B.
	بعدها يقوم بوضع قيم A و B بنفس الترتيب في المصفوفة C.
	في الأخير, يعرض للمستخدم القيم التي أصبحت تحتويها المصفوفة C.","['الحلقات', 'أنواع البيانات', 'الأساسيات', 'المصفوفات']",74.9208465255791,59.96042326278955,65.9098622889412,"[68.68528256346701, 70.29210174732044, 70.29210174732044, 60.065192191551816]"
108,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون مزدوجاً أو قيمته تساوي صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-5/ex-3-solution-using-cpp/938c9db1-28cb-410c-962c-2f0423dbdca6_ex-3.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter an odd number as the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0 || n % 2 == 0);

	for (int i = 1; i <= n; i++)
	{
		if (i <= n / 2)
		{
			for (int k = 1; k <= n / 2; k++)
			{
				std::cout << "" "";
			}

			std::cout << ""*"";

			for (int j = 1; j <= n / 2 - 1; j++)
			{
				if (i == 1 || i == n / 2 + 1)
				{
					std::cout << ""*"";
				}
				else
				{
					std::cout << "" "";
				}
			}

			std::cout << ""*"";
		}
		else if (i == n / 2 + 1)
		{
			for (int j = 1; j <= n; j++)
			{
				std::cout << ""*"";
			}
		}
		else
		{
			std::cout << ""*"";

			for (int j = 1; j <= n / 2 - 1; j++)
			{
				if (i == n)
				{
					std::cout << ""*"";
				}
				else
				{
					std::cout << "" "";
				}
			}

			std::cout << ""*"";
		}

		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter an odd number as the number of lines: 9
    *****
    *   *
    *   *
    *   *
*********
*   *
*   *
*   *
*****
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 9 عند التشغيل.,"للتأكد من النتيجة بشكل دقيق, قم بعد عدد النجوم و المسافات الفارغة الموجودة في كل سطر.","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'الدوال']",74.9208465255791,67.46042326278955,66.0058224394913,"[69.20388728518321, 62.265967215804025, 70.77151575723536, 70.77151575723536, 54.32517313639608]"
109,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون مزدوجاً أو قيمته تساوي صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-5/ex-4-solution-using-cpp/8c8bd1ac-8f52-4b52-879e-275350774bc7_ex-4.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter an odd number as the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0 || n % 2 == 0);

	for (int i = 1; i <= n; i++)
	{
		if (i <= n / 2)
		{
			std::cout << ""*"";

			for (int j = 1; j <= n / 2 - 1; j++)
			{
				if (i == 1 || i == n / 2 + 1)
				{
					std::cout << ""*"";
				}
				else
				{
					std::cout << "" "";
				}
			}

			std::cout << ""*"";
		}
		else if (i == n / 2 + 1)
		{
			for (int j = 1; j <= n; j++)
			{
				std::cout << ""*"";
			}
		}
		else
		{
			for (int k = 1; k <= n / 2; k++)
			{
				std::cout << "" "";
			}

			std::cout << ""*"";

			for (int j = 1; j <= n / 2 - 1; j++)
			{
				if (i == n)
				{
					std::cout << ""*"";
				}
				else
				{
					std::cout << "" "";
				}
			}

			std::cout << ""*"";
		}

		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter an odd number as the number of lines: 9
*****
*   *
*   *
*   *
*********
    *   *
    *   *
    *   *
    *****
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 9 عند التشغيل.,"للتأكد من النتيجة بشكل دقيق, قم بعد عدد النجوم و المسافات الفارغة الموجودة في كل سطر.","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'الدوال']",74.9208465255791,67.46042326278955,66.10002185333406,"[69.72190509466367, 62.957433027018936, 71.25034285491448, 71.25034285491448, 56.376774961212355]"
110,التعامل مع الأرقام و النصوص,"أكتب برنامج يطلب من المستخدم إدخال رقم. بعدها يعرض له إن كان هذا الرقم عبارة عن Palindrome أم لا.
الـ Palindrome عبارة عن رقم أعداده معكوسة بشكل متساوي من اليمين إلى اليسار و من اليسار إلى اليمين.",,"
#include <iostream>
#include <string>

int main() {

	bool isPalindrome = true;
	int n;

	std::cout << ""Enter a number: "";
	std::cin >> n;

	std::string nString = std::to_string(n) + """";


	for (int i = 0; i < nString.length() / 2; i++)
	{
		if (nString[i] != nString[nString.length() - i - 1])
		{
			isPalindrome = false;
			break;
		}
	}

	if (isPalindrome)
	{
		std::cout << n << "" is a palindrome"";
	}
	else
	{
		std::cout << n << "" is not a palindrome"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 1234
1234 is not a palindrome
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 1234 عند التشغيل.,الطريقة الثانية لحل التمرين و الحصول على نفس النتيجة.,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'التعامل مع النصوص', 'المصفوفات']",75.54296506137862,50.27148253068931,66.19250855056148,"[70.23935199860566, 63.64832793269541, 71.72859904705517, 71.72859904705517, 68.21801567069997, 61.74670919939351]"
111,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-5/ex-5-solution-using-cpp/6a1401ec-1a52-40c1-bfcf-00aa454cbe2c_ex-5.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0 || n % 2 == 0);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if (i < j)
			{
				std::cout << ""1"";
			}
			else if (i > j)
			{
				std::cout << ""0"";
			}
			else
			{
				std::cout << ""*"";
			}
		}
		std::cout << ""\n"";
	}	

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 9
*11111111
0*1111111
00*111111
000*11111
0000*1111
00000*111
000000*11
0000000*1
00000000*
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 9 عند التشغيل.,"للتأكد من النتيجة بشكل دقيق, قم بعد عدد النجوم و المسافات الفارغة الموجودة في كل سطر.","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'الدوال']",75.54296506137865,50.271482530689326,66.28753852777687,"[70.75764666254364, 64.34007059836787, 72.20770299919184, 72.20770299919184, 58.45948253956198]"
112,التعامل مع الأرقام و النصوص,"قم بإنشاء برنامج يطلب من المستخدم إدخال نصّين, بعدها يقوم بطباعة ما إن كان النص الأول ينتهي بالنص الثاني أم لا.",,"
#include <iostream>
#include <string>
#include <stdbool.h>

int main() {

	std::string text1, text2;
	int text2Counter = 0;
	bool found = true;

	std::cout << ""Enter text 1: "";
	getline(std::cin, text1);

	std::cout << ""Enter text 2: "";
	getline(std::cin, text2);

	for (int i = text1.length() - text2.length(); i < text1.length() && found == true; i++)
	{
		if (text1[i] != text2[text2Counter])
		{
			found = false;
		}
		text2Counter++;
	}

	std::cout << ""--------------------------------\n"";

	if (found)
	{
		std::cout << ""Text 1 end with '"" << text2 << ""'"";
	}
	else
	{
		std::cout << ""Text 1 is not end with '"" << text2 << ""'"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter text 1: Welcome to my world
Enter text 2: world
--------------------------------
Text 1 is end with 'world'
		",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,"مثال

Enter text 1: Welcome to my world
Enter text 2: world
--------------------------------
Text 1 is end with 'world'
	","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'التعامل مع النصوص', 'المصفوفات']",75.54296506137865,55.271482530689326,66.38087154111342,"[71.27537567185531, 65.03124760941404, 72.68624129670224, 72.68624129670224, 73.40900846242242, 63.3967984502124]"
113,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من 2 و خزنه في المتغير n.
	بعدها يقوم بطباعة جميع الأعداد الأولية ( Prime Numbers ) الموجودة بين 2 و n.",,"
#include <iostream>

int main() {
	
	int n;
	bool isPrime;
	do {
		std::cout <<(""Enter a number: "");
		std::cin >> n;
	}
	while (n <= 1);

	std::cout << ""All prime numbers between 2 and "" << n << "": "";

	for (int i = 2; i <= n; i++)
	{
		isPrime = true;

		for (int j = 2; j <= i / 2; j++)
		{
			if (i % j == 0)
			{
				isPrime = false;
				break;
			}
		}

		if (isPrime)
		{
			std::cout << i << "" "";
		}
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 12
All prime numbers between 2 and 12: 2 3 5 7 11 
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 12 عند التشغيل.,معلومة: العدد الأولي هو العدد الذي يقبل القسمة على نفسه و على 1 فقط مثل الأرقام 1 - 3 - 5 - 7 - 11 - 13 - 17 إلخ..,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",75.54296506137865,51.521482530689326,66.4725526427095,"[71.79255404392019, 65.7218739832134, 73.1642289569658, 73.1642289569658]"
114,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون مزدوجاً أو قيمته تساوي صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-2/ex-5-solution-using-cpp/546916f3-0911-4639-8d1a-af9620cb45a9_ex-5.PNG,"
#include <iostream>

int main() {

	int n;

	do
	{
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0 || n % 2 == 0);

	for (int i = 1; i <= n; i++)
	{
		if (i <= n / 2)
		{
			for (int k = 1; k < (n / 2) - i + 2; k++)
			{
				std::cout << "" "";
			}
			for (int j = 1; j <= i; j++)
			{
				std::cout << ""*"";
			}
		}
		else
		{
			for (int k = 1; k < i - (n / 2); k++)
			{
				std::cout << "" "";
			}
			for (int j = 1; j < n - i + 2; j++)
			{
				std::cout << ""*"";
			}
		}

		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 5
  *
 **
***
 **
  *
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 5  عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",76.4626185490824,54.4813092745412,66.5626253039267,"[72.3091962691921, 66.4119642102198, 73.64168047043641, 73.64168047043641]"
115,التعامل مع المصفوفات,"أكتب برنامج يطلب من المستخدم إدخال أي رقم يريد للبحث عنه بداخل مصفوفة أرقام أحادية (ذات بعد واحد) جاهزة.
	بعدها سيقوم البرنامج بطباعة كم مرة تم إيجاد الرقم الذي أدخله المستخدم في المصفوفة.",,"
#include <iostream>

int main() {
	
	int array[] = { 1, 2, 5, 3, 2, 4, 7, 2 };
	int arrayLength = (sizeof(array) / sizeof(*array));
	int found = 0;
	int x;

	std::cout <<(""Enter a number: "");
	std::cin >> x;

	for (int i = 0; i < arrayLength; i++)
	{
		if (array[i] == x)
		{
			found++;
		}
	}

	if (found == 1)
	{
		std::cout << ""'"" << x << ""' is found 1 time"";
	}
	else if (found > 1)
	{
		std::cout << ""'"" << x << ""' is found "" << found << "" times"";
	}
	else
	{
		std::cout << ""'"" << x << ""' is not found"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 2
'2' is found 3 times
		",سنحصل على النتيجة التالية في حال كانت المصفوفة تحتوي على نفس القيم المجهزة فيها و تم إدخال نفس القيمة التي تم تعليمها باللون الأصفر عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'المصفوفات', 'الدوال']",76.60056657223797,52.05028328611898,66.65713807541611,"[72.82731853122141, 67.10353447398359, 74.12061202066442, 74.12061202066442, 65.07618888228157, 60.60288440897708]"
116,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون مزدوجاً أو قيمته تساوي صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-2/ex-4-solution-using-cpp/b7ac9046-1d25-451b-a7ab-13f21beb0277_ex-4.PNG,"
#include <iostream>

int main() {

	int n;

	do
	{
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0 || n % 2 == 0);

	for (int i = 1; i <= n; i++)
	{
		if (i <= n / 2)
		{
			for (int j = 1; j <= i; j++)
			{
				std::cout << ""*"";
			}
		}
		else
		{
			for (int j = 1; j < n - i + 2; j++)
			{
				std::cout << ""*"";
			}
		}
		
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 5
*
**
***
**
*
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 5  عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",76.78720213297785,49.64360106648893,66.75091453791916,"[73.34519535692195, 67.7948593014186, 74.59929813456365, 74.59929813456365]"
117,إجراء عمليات حسابية,"قم بتعريف دالة إسمها SquareRoot(), عند استدعاءها نمرر لها عدد, فترجع ناتج قيمة الجزر التربيعي ( Square Root ) له.
	بعدها قم بتجربة هذه الدالة في البرنامج.",,"
#include <iostream>

float squareRoot(int n) {
    float low = 0;
    float high = (float) n + 1;
    float mid;

    while ((high-low) > 0.00001)
	{
        mid = (low + high) / 2;
        if (mid * mid < n)
		{
            low = mid;
        }
        else
		{
            high = mid;
        }
    }
	
    return low;
}


int main() {

    int x = 5;

    std::cout << ""The square root of "" << 5 << "" is: "" << squareRoot(x);

    char end; std::cin >> end;
    return 0;

}
		","
The square root of 5 is: 2.23607
		",سنحصل على النتيجة التالية عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'الدوال']",77.05382436260622,49.77691218130311,66.84428613133613,"[73.86293722626047, 68.48604917249158, 75.07784929210085, 75.07784929210085, 62.68546911448578]"
118,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-3/ex-5-solution-using-cpp/224525b6-587e-4e94-8f89-9b7f6bca998c_ex-5.PNG,"
#include <iostream>

int main() {

	int n, s = 0;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		if (i % 2 == 1)
		{
			s -= i;
		}
		else
		{
			s += i;
		}
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = 2
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",77.46587689930466,47.48293844965233,66.93777228905279,"[74.38071728369886, 69.17727723166445, 75.55643863773795, 75.55643863773795]"
119,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, مع الإشارة إلى أنه في حال قام بإدخال عدد مزدوج يجب أن يتم قبوله مع إضافة واحد عليه حتى يصبح مفرد.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-4/ex-3-solution-using-cpp/802b4d67-a61d-4655-b1aa-d777183ec401_ex-3.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	if (n % 2 == 0)
	{
		n++;
	}

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{

			if (i == j || j == n - i + 1)
			{
				std::cout << ""*"";
			}
			else
			{
				std::cout << "" "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 9
*       *
 *     * 
  *   *  
   * *   
    *    
   * *   
  *   *  
 *     * 
*       *
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 9 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",78.18696883852692,51.59348441926346,67.03228805310366,"[74.89884054324867, 69.86884849294873, 76.03537118548644, 76.03537118548644]"
120,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, مع الإشارة إلى أنه في حال قام بإدخال عدد مزدوج يجب أن يتم قبوله مع إضافة واحد عليه حتى يصبح مفرد.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-4/ex-5-solution-using-cpp/0fe48a52-d647-4d3d-bc71-85acaf83090b_ex-5.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	if (n % 2 == 0)
	{
		n++;
	}

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{

			if (i == 1 || i == n || j == 1 || j == n || i == n / 2 + 1 || j == n / 2 + 1)
			{
				std::cout << ""*"";
			}
			else
			{
				std::cout << "" "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 11
***********
*    *    *
*    *    *
*    *    *
*    *    *
***********
*    *    *
*    *    *
*    *    *
*    *    *
***********
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 11 عند التشغيل.,"الشكل الذي يظهر لك في النتيجة النهائية عبارة عن مربع لأن عدد النجوم التي تظهر عامودياً يساوي عدد النجوم التي تظهر أفقياً, لكنه لا يظهر لك كذلك بسبب الهامش الإفتراضي الذي يقوم الحاسوب بوضعه بين الأسطر.","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",78.18696883852692,51.59348441926346,67.12974203001298,"[75.41794320708462, 70.56139915851918, 76.5152831375211, 76.5152831375211]"
121,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, مع الإشارة إلى أنه في حال قام بإدخال عدد مزدوج يجب أن يتم قبوله مع إضافة واحد عليه حتى يصبح مفرد.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-4/ex-4-solution-using-cpp/d071853e-6d66-49a3-bc51-8c5cdf4c4a03_ex-4.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	if (n % 2 == 0)
	{
		n++;
	}

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{

			if (i == 1 || i == n || j == 1 || j == n || i == j || j == n - i + 1)
			{
				std::cout << ""*"";
			}
			else
			{
				std::cout << "" "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 11
***********
**       **
* *     * *
*  *   *  *
*   * *   *
*    *    *
*   * *   *
*  *   *  *
* *     * *
**       **
***********
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 11 عند التشغيل.,"الشكل الذي يظهر لك في النتيجة النهائية عبارة عن مربع لأن عدد النجوم التي تظهر عامودياً يساوي عدد النجوم التي تظهر أفقياً, لكنه لا يظهر لك كذلك بسبب الهامش الإفتراضي الذي يقوم الحاسوب بوضعه بين الأسطر.","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",78.18696883852692,51.59348441926346,67.22558519738661,"[75.93650893440866, 71.25341288757771, 76.99465815304386, 76.99465815304386]"
122,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, مع الإشارة إلى أنه في حال قام بإدخال عدد مزدوج يجب أن يتم قبوله مع إضافة واحد عليه حتى يصبح مفرد.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-4/ex-2-solution-using-cpp/eba93bee-b967-462b-8c8d-ad74b454243f_ex-2.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n <= 0);

	if (n % 2 == 0)
	{
		n++;
	}

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{

			if (i == j || j == n - i + 1)
			{
				std::cout << "" "";
			}
			else
			{
				std::cout << ""*"";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 9
 ******* 
* ***** *
** *** **
*** * ***
**** ****
*** * ***
** *** **
* ***** *
 ******* 
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 9 عند التشغيل.,"الشكل الذي يظهر لك في النتيجة النهائية عبارة عن مربع لأن عدد النجوم التي تظهر عامودياً يساوي عدد النجوم التي تظهر أفقياً, لكنه لا يظهر لك كذلك بسبب الهامش الإفتراضي الذي يقوم الحاسوب بوضعه بين الأسطر.","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",78.18696883852692,51.59348441926346,67.31985716529508,"[76.45455092857767, 71.94490288348119, 77.47350943541156, 77.47350943541156]"
123,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد بين 1 و 9 يمثل عدد أسطر الشكل الذي سيتم رسمه.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-10/ex-4-solution-using-cpp/8383f553-fe65-4588-aafc-43063f51a390_ex-4.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n < 1 || n > 9);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if (j == n - i + 1)
			{
				std::cout << n << "" "";
			}
			else if (j == n)
			{
				std::cout << n - i + 1 << "" "";
			}
			else if (i == n)
			{
				std::cout << n - j + 1 << "" "";
			}
			else
			{
				std::cout << ""  "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 6
          6 
        6 5 
      6   4 
    6     3 
  6       2 
6 5 4 3 2 1 
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 6 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'الدوال']",78.56468366383379,54.282341831916895,67.41259625567659,"[76.97208196357103, 72.63588192020902, 77.9518497586036, 77.9518497586036, 64.89510784280128]"
124,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد بين 1 و 9 يمثل عدد أسطر الشكل الذي سيتم رسمه.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-10/ex-3-solution-using-cpp/91bc2c57-b47e-4a0e-9d62-e1dc624571e7_ex-3.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter the number of lines: "";
		std::cin >> n;
	}
	while (n < 1 || n > 9);

	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++)
		{
			if (j == n - i + 1)
			{
				std::cout << ""1 "";
			}
			else if (j == n)
			{
				std::cout << i << "" "";
			}
			else if (i == n)
			{
				std::cout << j << "" "";
			}
			else
			{
				std::cout << ""  "";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter the number of lines: 6
          1 
        1 2 
      1   3 
    1     4 
  1       5 
1 2 3 4 5 6 
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 6 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'الدوال']",78.56468366383379,54.282341831916895,67.50612749121412,"[77.48987704694972, 73.3271250053222, 78.43045413018099, 78.43045413018099, 66.94648694151581]"
125,التعامل مع الأرقام و النصوص,"قم بتعريف دالة إسمها CountWords, عند استدعاءها نمرر لها نص, فترجع عدد الكلمات الموجودة في هذا النص.
	بعدها قم بتجربة هذه الدالة في البرنامج.",,"
#include <iostream>
#include <string>

int countWords(std::string s) {

	if (s.empty())
	{
		return 0;
	}

	int counter = 0;
	
	// هذه الإضافة سببها هو سواء كان يوجد مسافة فارغة في آخر النص أم لا يوجد, فإنها لن تؤثر على النتيجة
	s += "" "";

	for (int i = 0; i < s.length() - 1; i++)
	{
		if (s[i] != ' ' && s[i+1] == ' ')
		{
			counter++;
		}

	}

	return counter;
}

int main() {

	std::string text = ""Programming is easy to learn."";
	int numberOfWords = countWords(text);

	std::cout << ""Total words: "" << numberOfWords;

	char end; std::cin >> end;
	return 0;

}
		","
Total words: 5
		",سنحصل على النتيجة التالية عند التشغيل.,"مثال: إذا قمنا باستخدام الدالة CountWords() و تمرير النص ""Programming is easy to learn."" فإنها سترجع الرقم 5.","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'التعامل مع النصوص', 'المصفوفات', 'الدوال']",79.06830343090965,50.784151715454826,67.59816222698302,"[78.0071732970722, 74.01786925717916, 78.90855966850216, 78.90855966850216, 78.94297715258408, 66.97716518677211, 68.99736720697413]"
126,التعامل مع المصفوفات,"أكتب برنامج يطلب من المستخدم إدخال أي رقم يريد للبحث عنه بداخل مصفوفة أرقام ثنائية (ذات بعدين) جاهزة.
	بعدها سيقوم البرنامج بطباعة كم مرة تم إيجاد الرقم الذي أدخله المستخدم في المصفوفة.",,"
#include <iostream>

int main() {

	int matrix[3][3] = {
		{ 5, 2, 3 },
		{ 4, 5, 6 },
		{ 5, 8, 9 }
	};

	int rows = sizeof(matrix) / sizeof(matrix[0]);
	int cols = sizeof(matrix[0]) / sizeof(int);

	int found = 0;
	int x;

	std::cout << ""Enter a number: "";
	std::cin >> x;

	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{
			if (x == matrix[i][j])
			{
				found++;
			}
		}
	}

	if (found == 0)
	{
		std::cout << ""'"" << x << ""' is not found"" << ""\n"";
	}
	else
	{
		std::cout << ""'"" << x << ""' is found "" << found << "" time(s)\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
			Enter a number: 5
			'5' is found 3 time(s)
		",سنحصل على النتيجة التالية في حال كانت المصفوفة تحتوي على نفس القيم المجهزة فيها و تم إدخال نفس القيمة التي تم تعليمها باللون الأصفر عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'المصفوفات']",79.22157901219362,58.36078950609681,67.69173825456627,"[78.52498331113279, 74.70912727297423, 79.38717897076145, 79.38717897076145, 68.59565878326812]"
127,التعامل مع المصفوفات,"أكتب برنامج يطلب من المستخدم إدخال أي رقم يريد للبحث عنه بداخل مصفوفة أرقام ثنائية (ذات بعدين) جاهزة.
	بعدها سيقوم البرنامج بطباعة ما إن كانت القيمة موجودة في المصفوفة أم لا.
ملاحظة: أوقف عملية البحث بمجرد إيجاد عنصر يملك نفس القيمة المراد البحث عنها.",,"
#include <iostream>

int main() {

	int matrix[3][3] = {
		{ 1, 2, 3 },
		{ 4, 5, 6 },
		{ 7, 8, 9 }
	};

	int rows = sizeof(matrix) / sizeof(matrix[0]);
	int cols = sizeof(matrix[0]) / sizeof(int);

	bool isExist = false;
	int x;

	std::cout << ""Enter a number: "";
	std::cin >> x;

	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{
			if (x == matrix[i][j])
			{
				isExist = true;
				break;
			}
		}
	}

	if (isExist)
	{
		std::cout << ""'"" << x << ""' is exist in the matrix"" << ""\n"";
	}
	else
	{
		std::cout << ""'"" << x << ""' is not exist in the matrix"" << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
			Enter a number: 2
			'2' is exist in the matrix
		",سنحصل على النتيجة التالية في حال كانت المصفوفة تحتوي على نفس القيم المجهزة فيها و تم إدخال نفس القيمة التي تم تعليمها باللون الأصفر عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'المصفوفات']",79.22157901219362,59.61078950609681,67.78474715048645,"[79.0426042813057, 75.40019624488161, 79.86560922913307, 79.86560922913307, 70.21396333587643]"
128,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-7/ex-5-solution-using-cpp/16a25465-3af7-4552-a86f-798279fbaca6_ex-5.PNG,"
#include <iostream>

int main() {

	int f = 1;
	int n = 0;
	int s = 0;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		f = 1;

		for (int j = 1; j <= i + 1; j++)
		{
			f *= j;
		}

		if (i % 2 == 1)
		{
			s -= i + f;
		}
		else
		{
			s += i + f;
		}
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = 102
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",79.77337110481587,54.88668555240793,67.87630278240786,"[79.55974083014567, 76.09078079545608, 80.34355506617175, 80.34355506617175]"
129,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-6/ex-3-solution-using-cpp/ab7c082d-e2fc-430f-bf38-e83ccbfb8b79_ex-3.PNG,"
#include <iostream>

int main() {

	int n = 0;
	int s = 0;
	int p;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		if (i % 2 == 1)
		{
			s += i;
		}
		else
		{
			p = 1;

			for (int j = 1; j <= i; j++)
			{
				p *= i;
			}

			s += p;
		}
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = 264
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",79.77337110481587,54.88668555240793,67.96965177509209,"[80.0774751659066, 76.78196313295149, 80.82209869013136, 80.82209869013136]"
130,التعامل مع المصفوفات,"أكتب برنامج يطلب من المستخدم إعطائه عددين, العدد الأول يمثل عدد أسطر مصفوفة ثنائية ( ذات بعدين ) إسمها matrix و العدد الثاني يمثل عدد أعمدتها.
ملاحظة: عدد أسطر و أعمدة المصفوفة يجب أن يكون أكبر من صفر.
	بعدها يطلب من المستخدم إدخال عدد صحيح لكل عنصر فيها.
	في الأخير يعرض للمستخدم عدد العناصر التي تملك قيم أكبر من صفر, و عدد العناصر التي تملك قيم أصغر من صفر, و عدد العناصر التي تملك قيم تساوي صفر.",,"
#include <iostream>

int main() {

	int pCounter = 0;
	int nCounter = 0;
	int zCounter = 0;

	int rows = 0;
	int cols = 0;
	int **matrix;

	do
	{
		std::cout << ""Enter rows number: "";
		std::cin >> rows;
	}
	while (rows <= 0);
	
	do
	{
		std::cout << ""Enter cols number: "";
		std::cin >> cols;
	} 
	while (cols <= 0);
	
	matrix = new int *[rows];
	for (int i = 0; i < rows; i++)
	{
		matrix[i] = new int[cols];
	}

	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{
			std::cout << ""Enter matrix["" << i << ""]["" << j << ""]: "";
			std::cin >> matrix[i][j];
		}
	}

	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{
            if (matrix[i][j] > 0)
            {
                pCounter++;
            }
            else if (matrix[i][j] < 0)
            {
                nCounter++;
            }
            else
            {
                zCounter++;
            }
		}
	}

	std::cout << ""\nNumber of positive numbers: "" << pCounter;
	std::cout << ""\nNumber of negative numbers: "" << nCounter;
	std::cout << ""\nNumber of zeros: "" << zCounter << ""\n"";

	char end; std::cin >> end;
	return 0;

}
		","
			Enter rows number: 3
			Enter cols number: 3
			Enter matrix[0][0]: 1
			Enter matrix[0][1]: 2
			Enter matrix[0][2]: 0
			Enter matrix[1][0]: 5
			Enter matrix[1][1]: 0
			Enter matrix[1][2]: -1
			Enter matrix[2][0]: -2
			Enter matrix[2][1]: 4
			Enter matrix[2][2]: -3
			Number of positive numbers: 4
			Number of negative numbers: 3
			Number of zeros: 2
		",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'المصفوفات', 'الدوال']",79.77337110481587,74.88668555240793,68.06156462942732,"[80.59473078888453, 77.47266675766389, 81.30016360130799, 81.30016360130799, 71.89353741615831, 71.17203669465759]"
131,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-6/ex-4-solution-using-cpp/b1f2508b-9296-44a7-ad38-54b83c9a9dab_ex-4.PNG,"
#include <iostream>

int main() {

	int n = 0;
	int s = 0;
	int p;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		if (i % 2 == 1)
		{
			s += i;
		}
		else
		{
			p = 1;

			for (int j = 1; j <= i; j++)
			{
				p *= i;
			}

			s -= p;
		}
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = -256
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",79.77337110481587,54.88668555240793,68.15207423407807,"[81.11151866196764, 78.16290263248146, 81.77776076258978, 81.77776076258978]"
132,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-6/ex-2-solution-using-cpp/491600d2-c715-4d0c-8290-6dbe4e94bc2d_ex-2.PNG,"
#include <iostream>

int main() {

	int n = 0;
	int s = 0;
	int p;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		p = 1;

		for (int j = 1; j <= i; j++)
		{
			p *= i;
		}

		if (i % 2 == 1)
		{
			s -= p;
		}
		else
		{
			s += p;
		}
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = 232
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",79.77337110481587,54.88668555240793,68.24121248108257,"[81.6278494158353, 78.85268138808362, 82.25490080465616, 82.25490080465616]"
133,التعامل مع المصفوفات,"أكتب برنامج يطلب من المستخدم إعطائه عدد يمثل عدد عناصر مصفوفة إسمها arr و يخزنه في متغير إسمه n.
ملاحظة: عدد عناصر المصفوفة يجب أن يكون أكبر من صفر.
	بعدها ينشئ المصفوفة arr و يحدد أن عدد عناصرها هو العدد الذي أدخله المستخدم.
	بعدها يطلب من المستخدم إدخال عدد صحيح لكل عنصر فيها.
	بعدها يعرض للمستخدم جميع قيم عناصر المصفوفة التي قام هو بإدخالها مع وضع مسافة فارغة بين كل قيمتين.
	في الأخير, يقوم بترتيب قيم عناصر المصفوفة من الأكبر إلى الأصغر و من ثم يعرضها له من جديد.",,"
#include <iostream>

int main() {
	
	int n;
	int temp;
	int * arr;

	do {
		std::cout <<(""Enter arr length: "");
		std::cin >> n;
	}
	while (n <= 0);

	arr = new int[n];

	for (int i = 0; i < n; i++)
	{
		std::cout << ""Enter arr["" << i << ""]: "";
		std::cin >> arr[i];
	}

	std::cout << ""\nCurrent order\n"";
	for (int i = 0; i < n; i++)
	{
		std::cout << arr[i] << "" "";
	}

	for (int i = 0; i < n - 1; i++)
	{
		for (int j = i + 1; j < n; j++)
		{
			if (arr[j] > arr[i])
			{
				temp = arr[i];
				arr[i] = arr[j];
				arr[j] = temp;
			}
		}
	}

	std::cout << ""\n\nAfter descending order\n"";
	for (int i = 0; i < n; i++)
	{
		std::cout << arr[i] << "" "";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter arr length: 5
Enter arr[0]: 7
Enter arr[1]: 3
Enter arr[2]: 1
Enter arr[3]: 6
Enter arr[4]: 4
Current order
7 3 1 6 4 
After descending order
7 6 4 3 1
		",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'المصفوفات']",80.83097261567515,64.16548630783757,68.3290103033201,"[82.14373336144733, 79.54201333543013, 82.73159403846688, 82.73159403846688, 73.56998756142416]"
134,التعامل مع المصفوفات,"أكتب برنامج يطلب من المستخدم إعطائه عدد يمثل عدد عناصر مصفوفة إسمها arr و يخزنه في متغير إسمه n.
ملاحظة: عدد عناصر المصفوفة يجب أن يكون أكبر من صفر.
	بعدها ينشئ المصفوفة arr و يحدد أن عدد عناصرها هو العدد الذي أدخله المستخدم.
	بعدها يطلب من المستخدم إدخال عدد صحيح لكل عنصر فيها.
	بعدها يعرض للمستخدم جميع قيم عناصر المصفوفة التي قام هو بإدخالها مع وضع مسافة فارغة بين كل قيمتين.
	في الأخير, يقوم بترتيب قيم عناصر المصفوفة من الأصغر إلى الأكبر و من ثم يعرضها له من جديد.",,"
#include <iostream>

int main() {
	
	int n;
	int temp;
	int * arr;

	do {
		std::cout <<(""Enter arr length: "");
		std::cin >> n;
	}
	while (n <= 0);

	arr = new int[n];

	for (int i = 0; i < n; i++)
	{
		std::cout << ""Enter arr["" << i << ""]: "";
		std::cin >> arr[i];
	}

	std::cout << ""\nCurrent order\n"";
	for (int i = 0; i < n; i++)
	{
		std::cout << arr[i] << "" "";
	}

	for (int i = 0; i < n - 1; i++)
	{
		for (int j = i + 1; j < n; j++)
		{
			if (arr[j] < arr[i])
			{
				temp = arr[i];
				arr[i] = arr[j];
				arr[j] = temp;
			}
		}
	}

	std::cout << ""\n\nAfter ascending order\n"";
	for (int i = 0; i < n; i++)
	{
		std::cout << arr[i] << "" "";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter arr length: 5
Enter arr[0]: 7
Enter arr[1]: 3
Enter arr[2]: 1
Enter arr[3]: 6
Enter arr[4]: 4
Current order
7 3 1 6 4 
After ascending order
1 3 4 6 7 
		",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'المصفوفات']",80.83097261567515,64.16548630783757,68.42142585734734,"[82.66115655098926, 80.23288452670653, 83.2098265162075, 83.2098265162075, 75.1880943334015]"
135,التعامل مع المصفوفات,"أكتب برنامج يعرّف مصفوفة مربعة إسمها matrix تتألف من 3 أسطر و 3 أعمدة.
    ثم يطلب من المستخدم إدخال قيم لها.
إنتبه: نريد هذه المصفوفة أن تحتوي فقط على قيم أكبر أو تساوي صفر.
    ثم يعرض للمستخدم جميع القيم التي أصبحت تحتويها المصفوفة.
    بعدها يقوم بجمع قيم جميع العناصر الموجودة على القطر ( On Diagonal ), فوق القطر ( Above Diagonal ), و تحت القطر ( Under Diagonal ).
    في الأخير يعرض للمستخدم ناتج الجمع.",,"
#include <iostream>

int main() {

	const int rows = 3;
	const int cols = 3;
	int matrix[3][3];

	int sumOnDiagonals = 0;
	int sumAboveDiagonals = 0;
	int sumUnderDiagonals = 0;

	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{
			std::cout << ""Enter matrix["" << i << ""]["" << j << ""]: "";
			std::cin >> matrix [i][j];
		}
	}

	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{
			if (j > i)
			{
				sumAboveDiagonals += matrix[i][j];
			}
			else if (j < i)
			{
				sumUnderDiagonals += matrix[i][j];
			}
			else
			{
				sumOnDiagonals += matrix[i][j];
			}
		}
	}

	std::cout << ""\nNumber of elements above diagonals: "" << sumAboveDiagonals;
	std::cout << ""\nNumber of elements under diagonals: "" << sumUnderDiagonals;
	std::cout << ""\nNumber of elements on diagonals: "" << sumOnDiagonals;

	char end; std::cin >> end;
	return 0;

}
		","
			Enter matrix[0][0]: 1
			Enter matrix[0][1]: 2
			Enter matrix[0][2]: 3
			Enter matrix[1][0]: 4
			Enter matrix[1][1]: 5
			Enter matrix[1][2]: 6
			Enter matrix[2][0]: 7
			Enter matrix[2][1]: 8
			Enter matrix[2][2]: 9
			Sum of elements above diagonals: 11
			Sum of elements under diagonals: 19
			Sum of elements on diagonals: 15
		",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'المصفوفات', 'الدوال']",81.00155350452344,61.75077675226172,68.51247229205569,"[83.17812336742489, 80.92329934487665, 83.68760262084183, 83.68760262084183, 76.80574473227253, 73.34254126906906]"
136,التعامل مع المصفوفات,"أكتب برنامج يطلب من المستخدم إعطائه عدد يمثل عدد عناصر مصفوفة إسمها array و يخزنه في متغير إسمه n.
ملاحظة: عدد عناصر المصفوفة يجب أن يكون أكبر من صفر.
	بعدها ينشئ المصفوفة array و يحدد أن عدد عناصرها هو العدد الذي أدخله المستخدم.
	بعدها يطلب من المستخدم إدخال عدد صحيح لكل عنصر فيها.
	بعدها يعرض للمستخدم جميع قيم عناصر المصفوفة التي قام هو بإدخالها مع وضع مسافة فارغة بين كل قيمتين.
	بعدها يقوم بتحويل كل قيمة في المصفوفة أكبر من صفر إلى 1 و كل قيمة أصغر من صفر إلى -1.
	في الأخير, يقوم بعرض قيم المصفوفة من جديد.",,"
#include <iostream>

int main() {
	
	int n;
	int *array;

	do {
		std::cout << ""Enter array length: "";
		std::cin >> n;
	}
	while (n <= 0);

	array = new int[n];

	for (int i = 0; i < n; i++)
	{
		std::cout << ""Enter array["" << i << ""]: "";
		std::cin >> array[i];
	}

	std::cout << ""\nCurrent values:\n"";
	for (int i = 0; i < n; i++)
	{
		std::cout << array[i] << "" "";
	}

	for (int i = 0; i < n; i++)
	{
		if (array[i] > 0)
		{
			array[i] = 1;
		}
		else if (array[i] < 0)
		{
			array[i] = -1;
		}
	}

	std::cout << ""\n\nNew Values:\n"";
	for (int i = 0; i < n; i++)
	{
		std::cout << array[i] << "" "";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter array length: 5
Enter array[0]: 2
Enter array[1]: 4
Enter array[2]: 0
Enter array[3]: -3
Enter array[4]: -2
Current values:
2 4 0 -3 -2 
New values:
1 1 0 -1 -1
		",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'المصفوفات', 'الدوال']",81.31170057515665,61.905850287578325,68.60312190028623,"[83.69495790836791, 81.61358188755415, 84.16524644998356, 84.16524644998356, 78.42326285565096, 75.39295982534793]"
137,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون مزدوجاً أو قيمته تساوي صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-5/ex-1-solution-using-cpp/81812f16-9a79-4c18-a651-19cbd4ecbf96_ex-1.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter an odd number as the number of lines: "";
		std::cin >> n;
	} while (n <= 0 || n % 2 == 0);

	for (int i = 1; i <= n; i++)
	{
		if (i <= n / 2)
		{
			for (int k = 1; k <= n / 2; k++)
			{
				std::cout << "" "";
			}
			for (int j = 1; j <= n / 2 + 1; j++)
			{
				std::cout << ""*"";
			}
		}
		else if (i == n / 2 + 1)
		{
			for (int j = 1; j <= n; j++)
			{
				std::cout << ""*"";
			}
		}
		else
		{
			for (int j = 1; j <= n / 2 + 1; j++)
			{
				std::cout << ""*"";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter an odd number as the number of lines: 9
    *****
    *****
    *****
    *****
*********
*****    
*****    
*****    
*****    
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 9 عند التشغيل.,الطريقة الثانية لحل التمرين و الحصول على نفس النتيجة.,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'الدوال']",82.31161473087819,58.655807365439095,68.69414854765918,"[84.21191812902508, 82.3039901099458, 84.64301595883941, 84.64301595883941, 77.44350406134095]"
138,رسم أشكال هندسية,"أكتب برنامج مهمته رسم الشكل التالي بواسطة الحلقات.
	عند تشغيل البرنامج, يجب أن يطلب من المستخدم إدخال عدد أسطر الشكل الذي سيتم رسمه.
إنتبه: يجب أن يدخل المستخدم عدد مفرد و أكبر من صفر, لأن عدد الأسطر لا يمكن أن يكون مزدوجاً أو قيمته تساوي صفر أو أقل من صفر.",https://harmash.com//tutorials/algorithms-and-data-structure/drawing-test-5/ex-2-solution-using-cpp/7931bf20-81f0-4f15-8422-c66e8d36ba73_ex-2.PNG,"
#include <iostream>

int main() {

	int n;

	do {
		std::cout << ""Enter an odd number as the number of lines: "";
		std::cin >> n;
	} while (n <= 0 || n % 2 == 0);

	for (int i = 1; i <= n; i++)
	{
		if (i <= n / 2)
		{
			for (int j = 1; j <= n / 2 + 1; j++)
			{
				std::cout << ""*"";
			}
		}
		else if (i == n / 2 + 1)
		{
			for (int j = 1; j <= n; j++)
			{
				std::cout << ""*"";
			}
		}
		else
		{
			for (int k = 1; k <= n / 2; k++)
			{
				std::cout << "" "";
			}
			for (int j = 1; j <= n / 2 + 1; j++)
			{
				std::cout << ""*"";
			}
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter an odd number as the number of lines: 9
*****
*****
*****
*****
*********
    *****
    *****
    *****
    *****
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 9 عند التشغيل.,الطريقة الثانية لحل التمرين و الحصول على نفس النتيجة.,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'الدوال']",82.31161473087819,58.655807365439095,68.78929830404567,"[84.73025271935342, 82.99577270200862, 85.12215983736645, 85.12215983736645, 79.49542266700512]"
139,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-8/ex-5-solution-using-cpp/5832492e-c10f-4356-9285-7186bdedc602_ex-5.PNG,"
#include <iostream>

int main() {

	int n = 0;
	double s = 0;
	double f;
	double p;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		f = 1;
		for (int j = 1; j <= i; j++)
		{
			f *= j;
		}

		p = 1;
		for (int j = 1; j <= i; j++)
		{
			p *= i;
		}

		if (i % 2 == 1)
		{
			s += f / p;
		}
		else
		{
			s -= p / f;
		}
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = -11.4444
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",82.59364180044065,61.296820900220325,68.88307899918917,"[85.2481309559341, 83.68709894032378, 85.60084736214583, 85.60084736214583]"
140,التعامل مع المصفوفات,"أكتب برنامج يطلب من المستخدم إدخال علامة لكل مادة من مواد قم بتجهيز أسماءها في مصفوفة إسمها methods.
	العلامات التي يدخلها المستخدم يجب تخزينها في مصفوفة ثانية مع الإشارة إلى أن العلامة يمكن أن تكون بين 0 و20 فقط.
	بعدها قم بحساب متوسط العلامات التي أدخلها المستخدم.
	في الأخير, إعرض للمستخدم متوسط العلامات التي أدخلها و عبارة ناجح إذا كان معدله أكبر أو يساوي 10 و عبارة راسب إن كان أقل.",,"
#include <iostream>
#include <string>

int main() {

	std::string methods[] = { ""Arabic"", ""English"", ""Science"", ""Math"" };
	int methodsLength = sizeof(methods) / sizeof(methods[0]);

	double notes[5];
	double avg = 0;

	for (int i = 0; i < methodsLength; i++)
	{
		do
		{
			std::cout << ""Enter "" << methods[i] << "" note: "";
			std::cin >> notes[i];
		} while (notes[i] < 0 || notes[i] > 20);
	}

	for (int i = 0; i < methodsLength; i++)
	{
		avg += notes[i];
	}

	avg /= methodsLength;

	std::cout << ""\nAverage = "" << avg; 
	
	if (avg >= 10)
	{
		std::cout << "" [ Succeded ]"";
	}
	else
	{
		std::cout << "" [ Failed ]"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Enter Arabic note: 14
Enter English note: 17
Enter Science note: 8
Enter Math note: 13
Average: 13.0 [ Succeeded ]
		",سنحصل على النتيجة التالية في حال تم إدخال نفس القيم التي تم تعليمها باللون الأصفر عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'المصفوفات']",82.59364180044065,58.796820900220325,68.97703305907692,"[85.76606698076286, 84.37848296688702, 86.07959267517327, 86.07959267517327, 80.13520149588277]"
141,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-8/ex-1-solution-using-cpp/23133ddd-622d-46f4-af12-efdb955267f1_ex-1.PNG,"
#include <iostream>

int main() {

	int n = 0;
	int s = 0;
	int f;
	int p;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		if (i % 2 == 1)
		{
			p = 1;
			for (int j = 1; j <= i; j++)
			{
				p *= i;
			}
			s += p;
		}
		else
		{
			f = 1;
			for (int j = 1; j <= i; j++)
			{
				f *= j;
			}
			s += f;
		}
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = 54
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",82.59364180044065,61.296820900220325,69.06965443726412,"[86.2835587783581, 85.06942276621675, 86.55789376096723, 86.55789376096723]"
142,إجراء عمليات حسابية,"أكتب برنامج يطلب من المستخدم إعطائه عدد صحيح أكبر من صفر و خزنه في المتغير n.
	بعدها يقوم بحساب القيمة النهائية التي سيتم تخزينها في المتغير s.",https://harmash.com//tutorials/algorithms-and-data-structure/math-operations-test-8/ex-2-solution-using-cpp/dc4c689a-e0dc-49db-b1e0-8373b8722278_ex-2.PNG,"
#include <iostream>

int main() {

	int n = 0;
	double s = 0;
	double f;
	double p;

	do
	{
		std::cout << ""Enter a number: "";
		std::cin >> n;
	}
	while (n <= 0);

	for (int i = 1; i <= n; i++)
	{
		if (i % 2 == 1)
		{
			p = 1;
			for (int j = 1; j <= i; j++)
			{
				p *= i;
			}
			s += p;
		}
		else
		{
			f = 1;
			for (int j = 1; j <= i; j++)
			{
				f *= j;
			}
			s += 1 / f;
		}
	}

	std::cout << ""S = "" << s;

	char end; std::cin >> end;
	return 0;

}
		","
Enter a number: 4
S = 28.5417
		",سنحصل على النتيجة التالية إذا قام المستخدم بإدخال الرقم 4 عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات']",82.59364180044065,61.296820900220325,69.16097128899798,"[86.80061573380225, 85.75992772339535, 87.03576000461005, 87.03576000461005]"
143,التعامل مع الأرقام و النصوص,"قم بتعريف دالة إسمها CountNoneEscapeChars, عند استدعاءها نمرر لها نص, فترجع عدد الأحرف الموجودة في هذا النص.
ملاحظة: أي حرف يعتبر Escape Character مثل الأحرف \t و \n إلخ.. لا يجب أن يتم حساب عددهم ضمن عدد الأحرف.
	يمكنك إستخدام الـ Regex للتمييز بين الأحرف العادية و الأحرف التي تعتبر Escape Characters.",,"
#include <iostream>
#include <string>
#include <regex>

static int countNoneEscapeChars(std::string s) {

	if (s.empty())
	{
		return 0;
	}

	int counter = 0;
	std::string character = """";
	std::regex regex(""\\S"");
	
	for (int i = 0; i < s.length(); i++)
	{
		character = s[i];
		if ( std::regex_match(character, regex) )
		{
			counter++;
		}
	}

	return counter;

}

int main() {

	std::string text = ""Hi Lora.\nHow are you?."";
	int numberOfNoneEscapeChars = countNoneEscapeChars(text);

	std::cout << ""Total characters: "" << numberOfNoneEscapeChars;

	char end; std::cin >> end;
	return 0;

}
		","
Total characters: 18
		",سنحصل على النتيجة التالية عند التشغيل.,"مثال: إذا قمنا باستخدام الدالة CountNoneEscapeChars() و تمرير النص ""Hi Lora.\nHow are you?."" فإنها سترجع الرقم 18.","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'التعامل مع النصوص', 'المصفوفات', 'الدوال']",82.94617563739376,56.47308781869688,69.25101098196635,"[87.31724696965787, 86.45000696098548, 87.5132005286644, 87.5132005286644, 84.62213186578364, 81.81382905748083, 81.6695289131807]"
144,التعامل مع المصفوفات,"قم بتعريف دالة إسمها CountOccurrence, مهمتها البحث في مصفوفة أحادية ( تتألف من أعداد صحيحة ) و طباعة كم مرة تكررت كل قيمة موجودة فيها.
	بعدها قم بتجربة هذه الدالة في البرنامج.",,"
#include <iostream>

// هنا قمنا بتعريف الدالة
void countOccurrence(int arr[], int arrLength)
{
	int counter = 0;

	for (int i = 0; i < arrLength; i++)
	{
		if (arr[i] == 0)
		{
			counter++;
		}
	}

	if (counter > 0)
	{
		std::cout << ""[0] is repeated "" << counter << "" time(s)\n"";
	}

	for (int i = 0; i < arrLength; i++)
	{
		counter = 1;
		if (arr[i] != 0)
		{
			for (int j = i + 1; j < arrLength; j++)
			{
				if (arr[i] == arr[j])
				{
					counter++;
					arr[j] = 0;
				}
			}
			std::cout << ""["" << arr[i] << ""] is repeated "" << counter << "" time(s)\n"";
		}
	}
}

int main() {
	
	// هنا قمنا بتجهيز القيم التي سنمررها للدالة
	int array[] = { 0, 4, 2, 3, 2, 4, 3, 5, 2, 0, 1, 4, 2 };
	int arrayLength = sizeof(array) / sizeof(array[0]);

	// هنا قمنا بتجربة الدالة
	countOccurrence(array, arrayLength);

	char end; std::cin >> end;
	return 0;

}
		","
[0] is repeated 2 time(s)
[4] is repeated 3 time(s)
[2] is repeated 4 time(s)
[3] is repeated 2 time(s)
[5] is repeated 1 time(s)
[1] is repeated 1 time(s)
		",سنحصل على النتيجة التالية عند التشغيل.,مساعدة: يجب تمرير حجم المصفوفة أيضاً للدالة لأنه لا يمكن معرفته بالطرق العادية من داخل الدالة.,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'المصفوفات', 'الدوال']",86.11898016997166,60.55949008498583,69.34163894703306,"[87.83407429621295, 87.14028228927504, 87.99083714341816, 87.99083714341816, 83.43133996647134, 83.71994025507162]"
145,التعامل مع المصفوفات,"قم بتعريف دالة إسمها PrintSecondBiggest, عند استدعاءها نمرر لها مصفوفة أحادية (ذات بعد واحد) فتقوم بطباعة ثاني أكبر عدد موجود فيها.
	بعدها قم بإنشاء مصفوفة في البرنامج و تجربة استدعاء الدالة لمعرفة ثاني أكبر عدد موجود في المصفوفة.",,"
#include <iostream>

// printSecondBiggest() هنا قمنا بتعريف الدالة
void printSecondBiggest(int *arr, int arrLength) {

	if (arrLength == 0)
	{
		std::cout << ""Invalid params"";
		return;
	}

	int secondBiggest = arr[0];
	int temp;

	for (int i = 0; i < arrLength - 1; i++)
	{
		for (int j = i + 1; j < arrLength; j++)
		{
			if (arr[i] > arr[j])
			{
				temp = arr[j];
				arr[j] = arr[i];
				arr[i] = temp;
			}
		}
	}

	for (int i = arrLength - 1; i >= 0; i--)
	{
		if (arr[i] != arr[arrLength - 1])
		{
			secondBiggest = arr[i];
			break;
		}
	}

	if (secondBiggest == arr[0])
	{
		std::cout << ""There isn't a second biggest number"";
		return;
	}

	std::cout << ""Second biggest number is: "" << secondBiggest;

}


// printSecondBiggest() هنا قمنا بإنشاء مصفوفة أرقام أحادية و تجربة الدالة
int main() {

	int arr[] = { 5, 9, 3, 6, 4, 2, 7, 1, 8 };
	int arrLength = sizeof(arr) / sizeof(arr[0]);

	printSecondBiggest(arr, arrLength);

	char end; std::cin >> end;
	return 0;

}
		","
Second biggest number is: 8
		",سنحصل على النتيجة التالية عند التشغيل في حال كانت المصفوفة تحتوي على نفس القيم المجهزة فيها.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'المصفوفات', 'الدوال']",90.40655386264453,68.95327693132226,69.44745214784302,"[88.3559633680158, 87.83561936281235, 88.47353550341971, 88.47353550341971, 85.05391262070958, 85.7754133422103]"
146,التعامل مع المصفوفات,"قم بتعريف دالة إسمها PrintSecondLowest, عند استدعاءها نمرر لها مصفوفة أحادية (ذات بعد واحد) فتقوم بطباعة ثاني أصغر عدد موجود فيها.
	بعدها قم بإنشاء مصفوفة في البرنامج و تجربة استدعاء الدالة لمعرفة ثاني أصغر عدد موجود في المصفوفة.",,"
#include <iostream>

// printSecondLowest() هنا قمنا بتعريف الدالة
void printSecondLowest(int *arr, int arrLength) {

	if (arrLength == 0)
	{
		std::cout << ""Invalid params"";
		return;
	}

	int secondLowest = arr[0];
	int temp;

	for (int i = 0; i < arrLength - 1; i++)
	{
		for (int j = i + 1; j < arrLength; j++)
		{
			if (arr[i] > arr[j])
			{
				temp = arr[j];
				arr[j] = arr[i];
				arr[i] = temp;
			}
		}
	}

	for (int i = 0; i < arrLength; i++)
	{
		if (arr[i] != arr[0])
		{
			secondLowest = arr[i];
			break;
		}
	}

	if (secondLowest == arr[0])
	{
		std::cout << ""There isn't a second lowest number"";
		return;
	}

	std::cout << ""Second lowest number is: "" << secondLowest;

}


// printSecondLowest() هنا قمنا بإنشاء مصفوفة أرقام أحادية و تجربة الدالة
int main() {

	int arr[] = { 5, 9, 3, 6, 4, 2, 7, 1, 8 };
	int arrLength = sizeof(arr) / sizeof(arr[0]);

	printSecondLowest(arr, arrLength);

	char end; std::cin >> end;
	return 0;

}
		","
Second lowest number is: 2
		",سنحصل على النتيجة التالية عند التشغيل في حال كانت المصفوفة تحتوي على نفس القيم المجهزة فيها.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'المصفوفات', 'الدوال']",91.12867153719993,69.31433576859996,69.57387356390383,"[88.88472184490226, 88.53782584143329, 88.96310326850485, 88.96310326850485, 86.68335468003141, 87.83775583443258]"
147,التعامل مع المصفوفات,"أكتب برنامج يقوم بترتيب جميع القيم الموجودة في مصفوفة أرقام ثنائية جاهزة من الأصغر إلى الأكبر.
	قم بعرض القيم الموجودة في المصفوفة قبل الترتيب و بعد الترتيب.",,"
#include <iostream>

int main() {

	int matrix[3][3] = {
		{ 5, 2, 4 },
		{ 1, 7, 3 },
		{ 9, 8, 6 }
	};

	int rows = sizeof(matrix) / sizeof(matrix[0]);
	int cols = sizeof(matrix[0]) / sizeof(int);

	int temp;
	int array[rows * cols];

	std::cout << ""Matrix before sorting\n"";

	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{
			std::cout << matrix[i][j] << "" "";
		}
		std::cout << ""\n"";
	}

	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{
			array[j + (i * rows)] = matrix[i][j];
		}
	}

	for (int i = 0; i < (rows * cols) - 1; i++)
	{
		for (int j = i + 1; j < rows * cols; j++)
		{
			if (array[j] < array[i])
			{
				temp = array[j];
				array[j] = array[i];
				array[i] = temp;
			}
		}
	}
	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{
			matrix[i][j] = array[j + (i * rows)];
		}
	}

	std::cout << ""\nMatrix after sorting\n"";

	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{
			std::cout << matrix[i][j] << "" "";
		}
		std::cout << ""\n"";
	}

	char end; std::cin >> end;
	return 0;

}
		","
Matrix before sorting 
5 2 4 
1 7 3 
9 8 6 

Matrix after sorting 
1 2 3 
4 5 6 
7 8 9 
		",سنحصل على النتيجة التالية عند التشغيل.,,"['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'المصفوفات']",91.4069877242682,79.45349386213411,69.7022646716367,"[89.41413688567938, 89.2406888839449, 89.4533275974807, 89.4533275974807, 88.31345330324397]"
148,التعامل مع الأرقام و النصوص,"قم بتعريف دالة إسمها PrintWordsOccurence, نمرر لها نص عند إستدعاءها فتقوم بطباعة كم مرة تكررت كل كلمة في هذا النص.",,"
#include <iostream>
#include <string>
#include ""vector""

void printWordsOccurence(std::string s) {

	if (s.empty())
	{
		return;
	}

	int counter = 0;
	std::string word = """";
	std::vector<std::string> words;

	// هذه الإضافة سببها هو سواء كان يوجد مسافة فارغة في آخر النص أم لا يوجد, فإنها لن تؤثر على النتيجة
	s += "" "";

	for (int i = 0; i < s.length() - 1; i++)
	{
		if (s[i] != ' ')
		{
			word += s[i];
		}
		else
		{
			words.push_back(word);
			word = """";
		}
	}

	for (int i = 0; i < words.size(); i++)
	{
		counter = 1;
		for (int j = i + 1; j < words.size(); j++)
		{
			if (words[i] == words[j])
			{
				counter = counter + 1;
				words[j] = """";
			}
		}
		if (words[i] != """")
		{
			std::cout << ""["" << counter << ""] "" << words[i] << ""\n"";
		}
	}
}

int main() {

	std::string text = ""I am happy. I am a doctor. I like chocolate."";
	printWordsOccurence(text);

	char end; std::cin >> end;
	return 0;

}
		","
[3] I
[2] am
[1] happy.
[1] a
[1] doctor.
[1] like
[1] chocolate.
		",سنحصل على النتيجة التالية عند التشغيل.,"مثال: إذا قمنا باستخدام الدالة PrintWordsOccurence() و تمرير النص ""I am happy. I am a doctor. I like chocolate."" فإنها ستطبع النتيجة التالية.

[3] I
[2] am
[1] happy.
[1] a
[1] doctor.
[1] like
[1] chocolate.
	","['الحلقات', 'الشروط', 'أنواع البيانات', 'الأساسيات', 'التعامل مع النصوص', 'المصفوفات', 'الدوال']",100.0,76.25,69.83033323186874,"[89.9434444106229, 89.9434444106229, 89.9434444106229, 89.9434444106229, 89.9434444106229, 89.9434444106229, 89.9434444106229]"
